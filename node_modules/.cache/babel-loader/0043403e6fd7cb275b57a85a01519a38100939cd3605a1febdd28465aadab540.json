{"ast":null,"code":"import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\nexport default {\n  mounted() {\n    const ganttContainer = this.$refs.ganttContainer;\n    gantt.init(ganttContainer);\n    // 在这里进行Gantt配置和双时间轴的自定义渲染\n    antt.templates.task_text = function (start, end, task) {\n      const plannedStartDate = gantt.templates.task_date(start);\n      const plannedEndDate = gantt.templates.task_date(end);\n      const actualStartDate = gantt.templates.task_date(task.actual_start_date);\n      const actualEndDate = gantt.templates.task_date(task.actual_end_date);\n      return `${task.text} (Planned: ${plannedStartDate} - ${plannedEndDate}, Actual: ${actualStartDate} - ${actualEndDate})`;\n    };\n    gantt.templates.task_bar_text = function (start, end, task) {\n      const plannedStartDate = gantt.templates.task_date(start);\n      const plannedEndDate = gantt.templates.task_date(end);\n      const actualStartDate = gantt.templates.task_date(task.actual_start_date);\n      const actualEndDate = gantt.templates.task_date(task.actual_end_date);\n      return `${task.text} (Planned: ${plannedStartDate} - ${plannedEndDate}, Actual: ${actualStartDate} - ${actualEndDate})`;\n    };\n    const data = [{\n      id: 1,\n      text: 'Task 1',\n      start_date: '2023-07-01',\n      end_date: '2023-07-07',\n      actual_start_date: '2023-07-02',\n      actual_end_date: '2023-07-06'\n    }\n    // ...其他任务数据\n    ];\n\n    gantt.parse({\n      data\n    });\n  }\n};","map":{"version":3,"names":["gantt","mounted","ganttContainer","$refs","init","antt","templates","task_text","start","end","task","plannedStartDate","task_date","plannedEndDate","actualStartDate","actual_start_date","actualEndDate","actual_end_date","text","task_bar_text","data","id","start_date","end_date","parse"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div ref=\"ganttContainer\" style=\"width: 100%; height: 600px;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\r\n\r\nexport default {\r\n  mounted() {\r\n    const ganttContainer = this.$refs.ganttContainer;\r\n\r\n    gantt.init(ganttContainer);\r\n    // 在这里进行Gantt配置和双时间轴的自定义渲染\r\n    antt.templates.task_text = function (start, end, task) {\r\n  const plannedStartDate = gantt.templates.task_date(start);\r\n  const plannedEndDate = gantt.templates.task_date(end);\r\n  const actualStartDate = gantt.templates.task_date(task.actual_start_date);\r\n  const actualEndDate = gantt.templates.task_date(task.actual_end_date);\r\n\r\n  return `${task.text} (Planned: ${plannedStartDate} - ${plannedEndDate}, Actual: ${actualStartDate} - ${actualEndDate})`;\r\n};\r\n\r\ngantt.templates.task_bar_text = function (start, end, task) {\r\n  const plannedStartDate = gantt.templates.task_date(start);\r\n  const plannedEndDate = gantt.templates.task_date(end);\r\n  const actualStartDate = gantt.templates.task_date(task.actual_start_date);\r\n  const actualEndDate = gantt.templates.task_date(task.actual_end_date);\r\n\r\n  return `${task.text} (Planned: ${plannedStartDate} - ${plannedEndDate}, Actual: ${actualStartDate} - ${actualEndDate})`;\r\n};\r\n    const data = [\r\n  {\r\n    id: 1,\r\n    text: 'Task 1',\r\n    start_date: '2023-07-01',\r\n    end_date: '2023-07-07',\r\n    actual_start_date: '2023-07-02',\r\n    actual_end_date: '2023-07-06',\r\n  },\r\n  // ...其他任务数据\r\n];\r\n\r\ngantt.parse({ data });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 可以在这里定义Gantt样式 */\r\n</style>"],"mappings":"AAKA;AACA,OAAAA,KAAA;AAEA;EACAC,QAAA;IACA,MAAAC,cAAA,QAAAC,KAAA,CAAAD,cAAA;IAEAF,KAAA,CAAAI,IAAA,CAAAF,cAAA;IACA;IACAG,IAAA,CAAAC,SAAA,CAAAC,SAAA,aAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,MAAAC,gBAAA,GAAAX,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAJ,KAAA;MACA,MAAAK,cAAA,GAAAb,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAH,GAAA;MACA,MAAAK,eAAA,GAAAd,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAF,IAAA,CAAAK,iBAAA;MACA,MAAAC,aAAA,GAAAhB,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAF,IAAA,CAAAO,eAAA;MAEA,UAAAP,IAAA,CAAAQ,IAAA,cAAAP,gBAAA,MAAAE,cAAA,aAAAC,eAAA,MAAAE,aAAA;IACA;IAEAhB,KAAA,CAAAM,SAAA,CAAAa,aAAA,aAAAX,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,MAAAC,gBAAA,GAAAX,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAJ,KAAA;MACA,MAAAK,cAAA,GAAAb,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAH,GAAA;MACA,MAAAK,eAAA,GAAAd,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAF,IAAA,CAAAK,iBAAA;MACA,MAAAC,aAAA,GAAAhB,KAAA,CAAAM,SAAA,CAAAM,SAAA,CAAAF,IAAA,CAAAO,eAAA;MAEA,UAAAP,IAAA,CAAAQ,IAAA,cAAAP,gBAAA,MAAAE,cAAA,aAAAC,eAAA,MAAAE,aAAA;IACA;IACA,MAAAI,IAAA,IACA;MACAC,EAAA;MACAH,IAAA;MACAI,UAAA;MACAC,QAAA;MACAR,iBAAA;MACAE,eAAA;IACA;IACA;IAAA,CACA;;IAEAjB,KAAA,CAAAwB,KAAA;MAAAJ;IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}