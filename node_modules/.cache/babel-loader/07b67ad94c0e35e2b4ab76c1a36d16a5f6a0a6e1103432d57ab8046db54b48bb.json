{"ast":null,"code":"import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nimport Gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\nexport default {\n  data() {\n    return {\n      task: {\n        data: []\n      }\n    };\n  },\n  mounted() {\n    this.initGantt();\n  },\n  methods: {\n    initGantt() {\n      Gantt.config.xml_date = '%Y-%m-%d';\n      Gantt.config.columns = [{\n        name: 'text',\n        label: '任务名称',\n        tree: true,\n        width: '*'\n      }, {\n        name: 'start_date',\n        label: '开始时间',\n        align: 'center',\n        width: '100'\n      }, {\n        name: 'end_date',\n        label: '结束时间',\n        align: 'center',\n        width: '100'\n      }, {\n        name: 'duration',\n        label: '持续时间',\n        align: 'center',\n        width: '100'\n      }];\n      Gantt.templates.task_class = function (start, end, task) {\n        // 根据任务的类型来设置不同的样式\n        if (task.type === 'milestone') {\n          return 'milestone-task';\n        }\n        return '';\n      };\n      this.gantt = Gantt.getGanttInstance();\n      this.gantt.init(this.$refs.ganttChartElement);\n      this.gantt.parse({\n        data: [{\n          id: 1,\n          text: '任务1',\n          start_date: '2023-07-01',\n          end_date: '2023-07-05',\n          type: 'task'\n        }, {\n          id: 2,\n          text: '里程碑1',\n          start_date: '2023-07-06',\n          type: 'milestone'\n        }, {\n          id: 3,\n          text: '任务2',\n          start_date: '2023-07-07',\n          end_date: '2023-07-10',\n          type: 'task'\n        }],\n        links: []\n      });\n      this.gantt.config.subscales = [{\n        unit: 'day',\n        step: 1,\n        template: function (date) {\n          return `<strong>${date.getDate()}</strong>`;\n        }\n      }, {\n        unit: 'week',\n        step: 1,\n        template: function (date) {\n          return `W${Gantt.date.date_to_str('%W')(date)}`;\n        }\n      }, {\n        unit: 'month',\n        step: 1,\n        template: function (date) {\n          return Gantt.date.date_to_str('%M')(date);\n        }\n      }];\n      this.gantt.config.scale_unit = 'month';\n      this.gantt.config.step = 1;\n      this.gantt.config.date_scale = '%F, %Y';\n      this.gantt.render();\n    }\n  }\n};","map":{"version":3,"names":["Gantt","data","task","mounted","initGantt","methods","config","xml_date","columns","name","label","tree","width","align","templates","task_class","start","end","type","gantt","getGanttInstance","init","$refs","ganttChartElement","parse","id","text","start_date","end_date","links","subscales","unit","step","template","date","getDate","date_to_str","scale_unit","date_scale","render"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"ganttChartElement\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nimport Gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n    task:{\r\n      data:[]\r\n    }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initGantt();\r\n  },\r\n  methods: {\r\n    initGantt() {\r\n      Gantt.config.xml_date = '%Y-%m-%d';\r\n      Gantt.config.columns = [\r\n        { name: 'text', label: '任务名称', tree: true, width: '*' },\r\n        { name: 'start_date', label: '开始时间', align: 'center', width: '100' },\r\n        { name: 'end_date', label: '结束时间', align: 'center', width: '100' },\r\n        { name: 'duration', label: '持续时间', align: 'center', width: '100' },\r\n      ];\r\n\r\n      Gantt.templates.task_class = function (start, end, task) {\r\n        // 根据任务的类型来设置不同的样式\r\n        if (task.type === 'milestone') {\r\n          return 'milestone-task';\r\n        }\r\n        return '';\r\n      };\r\n\r\n      this.gantt = Gantt.getGanttInstance();\r\n      this.gantt.init(this.$refs.ganttChartElement);\r\n      this.gantt.parse({\r\n        data: [\r\n          { id: 1, text: '任务1', start_date: '2023-07-01', end_date: '2023-07-05', type: 'task' },\r\n          { id: 2, text: '里程碑1', start_date: '2023-07-06', type: 'milestone' },\r\n          { id: 3, text: '任务2', start_date: '2023-07-07', end_date: '2023-07-10', type: 'task' },\r\n        ],\r\n        links: [],\r\n      });\r\n\r\n      this.gantt.config.subscales = [\r\n        { unit: 'day', step: 1, template: function(date) { return `<strong>${date.getDate()}</strong>`; } },\r\n        { unit: 'week', step: 1, template: function(date) { return `W${Gantt.date.date_to_str('%W')(date)}`; } },\r\n        { unit: 'month', step: 1, template: function(date) { return Gantt.date.date_to_str('%M')(date); } },\r\n      ];\r\n\r\n      this.gantt.config.scale_unit = 'month';\r\n      this.gantt.config.step = 1;\r\n      this.gantt.config.date_scale = '%F, %Y';\r\n\r\n      this.gantt.render();\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.milestone-task .gantt_task_content {\r\n  background-color: #f596aa !important;\r\n}\r\n</style>"],"mappings":"AAOA;AACA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAD,IAAA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACAJ,KAAA,CAAAM,MAAA,CAAAC,QAAA;MACAP,KAAA,CAAAM,MAAA,CAAAE,OAAA,IACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,EACA;MAEAZ,KAAA,CAAAc,SAAA,CAAAC,UAAA,aAAAC,KAAA,EAAAC,GAAA,EAAAf,IAAA;QACA;QACA,IAAAA,IAAA,CAAAgB,IAAA;UACA;QACA;QACA;MACA;MAEA,KAAAC,KAAA,GAAAnB,KAAA,CAAAoB,gBAAA;MACA,KAAAD,KAAA,CAAAE,IAAA,MAAAC,KAAA,CAAAC,iBAAA;MACA,KAAAJ,KAAA,CAAAK,KAAA;QACAvB,IAAA,GACA;UAAAwB,EAAA;UAAAC,IAAA;UAAAC,UAAA;UAAAC,QAAA;UAAAV,IAAA;QAAA,GACA;UAAAO,EAAA;UAAAC,IAAA;UAAAC,UAAA;UAAAT,IAAA;QAAA,GACA;UAAAO,EAAA;UAAAC,IAAA;UAAAC,UAAA;UAAAC,QAAA;UAAAV,IAAA;QAAA,EACA;QACAW,KAAA;MACA;MAEA,KAAAV,KAAA,CAAAb,MAAA,CAAAwB,SAAA,IACA;QAAAC,IAAA;QAAAC,IAAA;QAAAC,QAAA,WAAAA,CAAAC,IAAA;UAAA,kBAAAA,IAAA,CAAAC,OAAA;QAAA;MAAA,GACA;QAAAJ,IAAA;QAAAC,IAAA;QAAAC,QAAA,WAAAA,CAAAC,IAAA;UAAA,WAAAlC,KAAA,CAAAkC,IAAA,CAAAE,WAAA,OAAAF,IAAA;QAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,IAAA;QAAAC,QAAA,WAAAA,CAAAC,IAAA;UAAA,OAAAlC,KAAA,CAAAkC,IAAA,CAAAE,WAAA,OAAAF,IAAA;QAAA;MAAA,EACA;MAEA,KAAAf,KAAA,CAAAb,MAAA,CAAA+B,UAAA;MACA,KAAAlB,KAAA,CAAAb,MAAA,CAAA0B,IAAA;MACA,KAAAb,KAAA,CAAAb,MAAA,CAAAgC,UAAA;MAEA,KAAAnB,KAAA,CAAAoB,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}