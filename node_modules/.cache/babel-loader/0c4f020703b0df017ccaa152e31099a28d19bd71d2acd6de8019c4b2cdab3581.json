{"ast":null,"code":"import Gantt from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nexport default {\n  data() {\n    return {\n      ganttData: [{\n        id: 1,\n        text: 'Milestone 1',\n        start_date: '2023-07-01',\n        end_date: '2023-07-05',\n        parent: 0\n      }, {\n        id: 2,\n        text: 'Task 1',\n        start_date: '2023-07-02',\n        end_date: '2023-07-10',\n        parent: 1\n      }, {\n        id: 3,\n        text: 'Task 2',\n        start_date: '2023-07-06',\n        end_date: '2023-07-15',\n        parent: 1\n      }, {\n        id: 4,\n        text: 'Milestone 2',\n        start_date: '2023-07-20',\n        end_date: '2023-07-25',\n        parent: 0\n      }, {\n        id: 5,\n        text: 'Task 3',\n        start_date: '2023-07-21',\n        end_date: '2023-07-30',\n        parent: 4\n      }, {\n        id: 6,\n        text: 'Task 4',\n        start_date: '2023-07-26',\n        end_date: '2023-08-05',\n        parent: 4\n      }]\n    };\n  },\n  mounted() {\n    this.initGantt();\n  },\n  methods: {\n    initGantt() {\n      Gantt.config.xml_date = '%Y-%m-%d';\n      Gantt.config.show_tree = true;\n      Gantt.config.columns = [{\n        name: 'text',\n        label: '里程碑名称',\n        tree: true,\n        width: '*'\n      }, {\n        name: 'start_date',\n        label: '计划开始时间',\n        align: 'center',\n        width: '100'\n      }, {\n        name: 'end_date',\n        label: '计划结束时间',\n        align: 'center',\n        width: '100'\n      }, {\n        name: 'actual_start_date',\n        label: '实际开始时间',\n        align: 'center',\n        width: '100'\n      }, {\n        name: 'actual_end_date',\n        label: '实际结束时间',\n        align: 'center',\n        width: '100'\n      }];\n      this.gantt = Gantt.getGanttInstance();\n      this.gantt.init(this.$refs.ganttChartElement);\n      this.gantt.parse({\n        data: this.ganttData\n      });\n      const treeWrapper = this.gantt.$container.querySelector('.gantt_tree_content');\n      treeWrapper.style.width = '300px';\n      treeWrapper.style.position = 'absolute';\n      treeWrapper.style.left = '0';\n      const ganttChart = this.gantt.$container.querySelector('.gantt_task_area');\n      ganttChart.style.marginLeft = '300px';\n    }\n  }\n};","map":{"version":3,"names":["Gantt","data","ganttData","id","text","start_date","end_date","parent","mounted","initGantt","methods","config","xml_date","show_tree","columns","name","label","tree","width","align","gantt","getGanttInstance","init","$refs","ganttChartElement","parse","treeWrapper","$container","querySelector","style","position","left","ganttChart","marginLeft"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"gantt-container\">\r\n      <div ref=\"ganttChartElement\" class=\"gantt-chart\"></div>\r\n      <div ref=\"ganttTreeElement\" class=\"gantt-tree\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Gantt from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ganttData: [\r\n        { id: 1, text: 'Milestone 1', start_date: '2023-07-01', end_date: '2023-07-05', parent: 0 },\r\n        { id: 2, text: 'Task 1', start_date: '2023-07-02', end_date: '2023-07-10', parent: 1 },\r\n        { id: 3, text: 'Task 2', start_date: '2023-07-06', end_date: '2023-07-15', parent: 1 },\r\n        { id: 4, text: 'Milestone 2', start_date: '2023-07-20', end_date: '2023-07-25', parent: 0 },\r\n        { id: 5, text: 'Task 3', start_date: '2023-07-21', end_date: '2023-07-30', parent: 4 },\r\n        { id: 6, text: 'Task 4', start_date: '2023-07-26', end_date: '2023-08-05', parent: 4 },\r\n      ]\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initGantt();\r\n  },\r\n  methods: {\r\n    initGantt() {\r\n      Gantt.config.xml_date = '%Y-%m-%d';\r\n      Gantt.config.show_tree = true;\r\n      Gantt.config.columns = [\r\n        { name: 'text', label: '里程碑名称', tree: true, width: '*' },\r\n        { name: 'start_date', label: '计划开始时间', align: 'center', width: '100' },\r\n        { name: 'end_date', label: '计划结束时间', align: 'center', width: '100' },\r\n        { name: 'actual_start_date', label: '实际开始时间', align: 'center', width: '100' },\r\n        { name: 'actual_end_date', label: '实际结束时间', align: 'center', width: '100' },\r\n      ];\r\n\r\n      this.gantt = Gantt.getGanttInstance();\r\n      this.gantt.init(this.$refs.ganttChartElement);\r\n      this.gantt.parse({ data: this.ganttData });\r\n\r\n      const treeWrapper = this.gantt.$container.querySelector('.gantt_tree_content');\r\n      treeWrapper.style.width = '300px';\r\n      treeWrapper.style.position = 'absolute';\r\n      treeWrapper.style.left = '0';\r\n\r\n      const ganttChart = this.gantt.$container.querySelector('.gantt_task_area');\r\n      ganttChart.style.marginLeft = '300px';\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.gantt-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.gantt-chart {\r\n  flex: 1;\r\n}\r\n\r\n.gantt-tree {\r\n  flex: none;\r\n  width: 300px;\r\n  border-right: solid 1px #ccc;\r\n}\r\n</style>"],"mappings":"AAUA,OAAAA,KAAA;AACA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QAAAC,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,MAAA;MAAA,GACA;QAAAJ,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,MAAA;MAAA,GACA;QAAAJ,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,MAAA;MAAA,GACA;QAAAJ,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,MAAA;MAAA,GACA;QAAAJ,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,MAAA;MAAA,GACA;QAAAJ,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,MAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACAT,KAAA,CAAAW,MAAA,CAAAC,QAAA;MACAZ,KAAA,CAAAW,MAAA,CAAAE,SAAA;MACAb,KAAA,CAAAW,MAAA,CAAAG,OAAA,IACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAG,KAAA;QAAAD,KAAA;MAAA,EACA;MAEA,KAAAE,KAAA,GAAApB,KAAA,CAAAqB,gBAAA;MACA,KAAAD,KAAA,CAAAE,IAAA,MAAAC,KAAA,CAAAC,iBAAA;MACA,KAAAJ,KAAA,CAAAK,KAAA;QAAAxB,IAAA,OAAAC;MAAA;MAEA,MAAAwB,WAAA,QAAAN,KAAA,CAAAO,UAAA,CAAAC,aAAA;MACAF,WAAA,CAAAG,KAAA,CAAAX,KAAA;MACAQ,WAAA,CAAAG,KAAA,CAAAC,QAAA;MACAJ,WAAA,CAAAG,KAAA,CAAAE,IAAA;MAEA,MAAAC,UAAA,QAAAZ,KAAA,CAAAO,UAAA,CAAAC,aAAA;MACAI,UAAA,CAAAH,KAAA,CAAAI,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}