{"ast":null,"code":"import gantt from \"dhtmlx-gantt\"; // 引入模块\nimport \"dhtmlx-gantt/codebase/skins/dhtmlxgantt_terrace.css\"; //皮肤\nexport default {\n  data() {},\n  mounted() {\n    this.initGantt();\n    this.getData(); // 获取数据\n  },\n\n  methods: {\n    initGantt() {\n      //自适应甘特图的尺寸大小, 使得在不出现滚动条的情况下, 显示全部任务\n      gantt.config.autosize = true;\n      // 设置日期格式\n      gantt.config.date_format = \"%Y-%m-%d\";\n      // 工期计算的基本单位\n      gantt.config.duration_unit = \"day\";\n      //设置x轴日期\n      gantt.config.scale_unit = \"day\";\n      gantt.config.step = 1;\n      gantt.config.date_scale = \"%d %M\";\n      //只读模式\n      gantt.config.readonly = true;\n      // 水平或垂直滚动条尺寸\n      gantt.config.scroll_size = 10;\n      gantt.plugins({\n        // 提示信息\n        tooltip: true // 启用 tooltip 插件\n      });\n      // 在时间线上增加一行年份显示\n      // gantt.config.subscales = [\n      //   {\n      //     unit: \"year\",\n      //     step: 1,\n      //     date: \"%Y\",\n      //   },\n      // ];\n      // 表格列宽自适应\n      gantt.config.autofit = true;\n      // 把任务或者连线拖拽到浏览器屏幕外时，自动触发滚动效果，相当于拖动滚动条\n      gantt.config.autoscroll = true;\n      // 自定义 tooltips 显示内容\n      gantt.attachEvent(\"onGanttReady\", () => {\n        gantt.templates.tooltip_text = function (start, end, task) {\n          return \"【任务名称：\" + task.name + \"】\" + \"<br/>\" + \"【负责人：\" + task.relevant_person + \"】\";\n        };\n      });\n      // 表格列设置\n      gantt.config.columns = [{\n        name: \"type\",\n        align: \"center\",\n        tree: true,\n        // 展示 tree 型数据结构\n        resize: true,\n        // 允许通过拖拽的方式border改变列的宽度**(pro收费版支持)**\n        width: 150,\n        label: \"任务类型\"\n      }, {\n        name: \"start_date\",\n        align: \"center\",\n        resize: true,\n        label: \"预计开始时间\",\n        width: 150\n      }, {\n        name: \"end_date\",\n        align: \"center\",\n        resize: true,\n        label: \"预计结束时间\",\n        width: 150\n      }];\n      // 当task的长度改变时，自动调整图标坐标轴区间用于适配task的长度\n      gantt.config.fit_tasks = true;\n      // 初始化\n      gantt.init(this.$refs.gantt);\n      // 数据解析\n      gantt.parse(this.tasks);\n    }\n  },\n  reload() {\n    gantt.clearAll(); // 从甘特图中删除所有任务和其他元素（包括标记）\n    gantt.parse(this.tasks); // 数据解析\n    gantt.render(); // 呈现整个甘特图\n  },\n\n  getData() {\n    Api().then(res => {\n      this.tasks.data = res.data;\n      // 如果需要折叠父子关系（tree）\n      this.tasks.data = [{\n        id: 1,\n        text: '123'\n      }, {\n        id: 2,\n        text: '234'\n      }, {\n        id: 3,\n        text: '345',\n        parent: 2\n      }];\n      this.reload();\n    });\n  }\n};","map":{"version":3,"names":["gantt","data","mounted","initGantt","getData","methods","config","autosize","date_format","duration_unit","scale_unit","step","date_scale","readonly","scroll_size","plugins","tooltip","autofit","autoscroll","attachEvent","templates","tooltip_text","start","end","task","name","relevant_person","columns","align","tree","resize","width","label","fit_tasks","init","$refs","parse","tasks","reload","clearAll","render","Api","then","res","id","text","parent"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<script>\r\nimport gantt from \"dhtmlx-gantt\"; // 引入模块\r\nimport \"dhtmlx-gantt/codebase/skins/dhtmlxgantt_terrace.css\"; //皮肤\r\nexport default{\r\n\tdata(){\r\n\t},\r\n\tmounted(){\r\n\t\tthis.initGantt()\r\n\t\tthis.getData() // 获取数据\r\n\t},\r\n\tmethods:{\r\n\t\tinitGantt(){\r\n\t\t\t//自适应甘特图的尺寸大小, 使得在不出现滚动条的情况下, 显示全部任务\r\n     \t\tgantt.config.autosize = true;\r\n     \t\t// 设置日期格式\r\n      \t\tgantt.config.date_format = \"%Y-%m-%d\";\r\n      \t\t// 工期计算的基本单位\r\n     \t\tgantt.config.duration_unit = \"day\";\r\n     \t\t//设置x轴日期\r\n      \t\tgantt.config.scale_unit = \"day\";\r\n      \t\tgantt.config.step = 1;\r\n      \t\tgantt.config.date_scale = \"%d %M\";\r\n      \t\t//只读模式\r\n      \t\tgantt.config.readonly = true;\r\n      \t\t// 水平或垂直滚动条尺寸\r\n     \t\tgantt.config.scroll_size = 10;\r\n     \t\tgantt.plugins({ // 提示信息\r\n        \t\ttooltip: true// 启用 tooltip 插件\r\n     \t\t})\r\n     \t\t// 在时间线上增加一行年份显示\r\n      \t\t// gantt.config.subscales = [\r\n      \t\t//   {\r\n      \t\t//     unit: \"year\",\r\n      \t\t//     step: 1,\r\n      \t\t//     date: \"%Y\",\r\n      \t\t//   },\r\n      \t\t// ];\r\n     \t\t// 表格列宽自适应\r\n     \t\tgantt.config.autofit = true;\r\n     \t\t// 把任务或者连线拖拽到浏览器屏幕外时，自动触发滚动效果，相当于拖动滚动条\r\n     \t\tgantt.config.autoscroll = true;\r\n     \t\t// 自定义 tooltips 显示内容\r\n      \t\tgantt.attachEvent(\"onGanttReady\", () => {\r\n        \t\tgantt.templates.tooltip_text = function (start, end, task) {\r\n        \t\t\treturn (\r\n        \t\t\t\t\"【任务名称：\" + task.name + \"】\" +\r\n              \t\t\t\"<br/>\" +\r\n              \t\t\t\"【负责人：\" + task.relevant_person + \"】\"\r\n        \t\t\t)\r\n          \t\t}\r\n      \t\t});\r\n     \t\t// 表格列设置\r\n     \t\tgantt.config.columns = [\r\n        \t\t{\r\n          \t\t\tname: \"type\",\r\n          \t\t\talign: \"center\",\r\n          \t\t\ttree: true, // 展示 tree 型数据结构\r\n          \t\t\tresize: true, // 允许通过拖拽的方式border改变列的宽度**(pro收费版支持)**\r\n          \t\t\twidth: 150,\r\n          \t\t\tlabel: \"任务类型\",\r\n        \t\t},\r\n        \t\t{\r\n          \t\t\tname: \"start_date\",\r\n          \t\t\talign: \"center\",\r\n          \t\t\tresize: true,\r\n          \t\t\tlabel: \"预计开始时间\",\r\n          \t\t\twidth: 150,\r\n        \t\t},\r\n        \t\t{\r\n         \t \t\tname: \"end_date\",\r\n          \t\t\talign: \"center\",\r\n          \t\t\tresize: true,\r\n          \t\t\tlabel: \"预计结束时间\",\r\n          \t\t\twidth: 150,\r\n        \t\t},\r\n      \t\t];\r\n      \t\t// 当task的长度改变时，自动调整图标坐标轴区间用于适配task的长度\r\n      \t\tgantt.config.fit_tasks = true;\r\n      \t\t// 初始化\r\n      \t\tgantt.init(this.$refs.gantt);\r\n      \t\t// 数据解析\r\n      \t\tgantt.parse(this.tasks);\r\n\t\t}\r\n\t},\r\n\treload() {\r\n      gantt.clearAll();// 从甘特图中删除所有任务和其他元素（包括标记）\r\n      gantt.parse(this.tasks); // 数据解析\r\n      gantt.render(); // 呈现整个甘特图\r\n    },\r\n    getData(){\r\n    \tApi().then(res => {\r\n    \t\tthis.tasks.data = res.data\r\n    \t\t// 如果需要折叠父子关系（tree）\r\n    \t\tthis.tasks.data = [\r\n    \t\t{id:1,text: '123'},\r\n    \t\t{id:2,text: '234'},\r\n    \t\t{id:3,text: '345',parent: 2,}\r\n    \t\t]\r\n    \t\tthis.reload()\r\n    \t})\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"AACA,OAAAA,KAAA;AACA;AACA;EACAC,KAAA,GACA;EACAC,QAAA;IACA,KAAAC,SAAA;IACA,KAAAC,OAAA;EACA;;EACAC,OAAA;IACAF,UAAA;MACA;MACAH,KAAA,CAAAM,MAAA,CAAAC,QAAA;MACA;MACAP,KAAA,CAAAM,MAAA,CAAAE,WAAA;MACA;MACAR,KAAA,CAAAM,MAAA,CAAAG,aAAA;MACA;MACAT,KAAA,CAAAM,MAAA,CAAAI,UAAA;MACAV,KAAA,CAAAM,MAAA,CAAAK,IAAA;MACAX,KAAA,CAAAM,MAAA,CAAAM,UAAA;MACA;MACAZ,KAAA,CAAAM,MAAA,CAAAO,QAAA;MACA;MACAb,KAAA,CAAAM,MAAA,CAAAQ,WAAA;MACAd,KAAA,CAAAe,OAAA;QAAA;QACAC,OAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAhB,KAAA,CAAAM,MAAA,CAAAW,OAAA;MACA;MACAjB,KAAA,CAAAM,MAAA,CAAAY,UAAA;MACA;MACAlB,KAAA,CAAAmB,WAAA;QACAnB,KAAA,CAAAoB,SAAA,CAAAC,YAAA,aAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA;UACA,OACA,WAAAA,IAAA,CAAAC,IAAA,SACA,UACA,UAAAD,IAAA,CAAAE,eAAA;QAEA;MACA;MACA;MACA1B,KAAA,CAAAM,MAAA,CAAAqB,OAAA,IACA;QACAF,IAAA;QACAG,KAAA;QACAC,IAAA;QAAA;QACAC,MAAA;QAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAG,KAAA;QACAE,MAAA;QACAE,KAAA;QACAD,KAAA;MACA,GACA;QACAN,IAAA;QACAG,KAAA;QACAE,MAAA;QACAE,KAAA;QACAD,KAAA;MACA,EACA;MACA;MACA/B,KAAA,CAAAM,MAAA,CAAA2B,SAAA;MACA;MACAjC,KAAA,CAAAkC,IAAA,MAAAC,KAAA,CAAAnC,KAAA;MACA;MACAA,KAAA,CAAAoC,KAAA,MAAAC,KAAA;IACA;EACA;EACAC,OAAA;IACAtC,KAAA,CAAAuC,QAAA;IACAvC,KAAA,CAAAoC,KAAA,MAAAC,KAAA;IACArC,KAAA,CAAAwC,MAAA;EACA;;EACApC,QAAA;IACAqC,GAAA,GAAAC,IAAA,CAAAC,GAAA;MACA,KAAAN,KAAA,CAAApC,IAAA,GAAA0C,GAAA,CAAA1C,IAAA;MACA;MACA,KAAAoC,KAAA,CAAApC,IAAA,IACA;QAAA2C,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;QAAAC,MAAA;MAAA,EACA;MACA,KAAAR,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}