{"ast":null,"code":"import 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport gantt from 'dhtmlx-gantt/codebase/dhtmlxgantt.js';\nexport default {\n  name: 'GanttChart',\n  mounted() {\n    gantt.config.columns = [\n    // 定义你需要的其他列\n    {\n      name: 'Second Timeline',\n      width: 200,\n      template: this.secondTimelineTpl\n    }];\n    gantt.attachEvent('onBeforeTaskDisplay', task => {\n      // 返回true表示显示该任务，根据需要过滤任务\n      return true;\n    });\n    gantt.init(this.$refs.ganttContainer);\n    gantt.parse(this.getChartData());\n    this.initSecondTimeline();\n  },\n  methods: {\n    getChartData() {\n      // 返回甘特图的任务数据，根据需要自定义\n      return [{\n        id: 1,\n        text: 'Task 1',\n        start_date: '2023-06-01',\n        duration: 5\n      }, {\n        id: 2,\n        text: 'Task 2',\n        start_date: '2023-06-06',\n        duration: 3\n      }, {\n        id: 3,\n        text: 'Task 3',\n        start_date: '2023-06-10',\n        duration: 8\n      }\n      // 更多任务数据...\n      ];\n    },\n\n    initSecondTimeline() {\n      const secondTimelineConfig = {\n        scale_height: 50\n      };\n      gantt.ext.inlineLayers.add('second-timeline', {\n        renderer: this.renderSecondTimeline,\n        container: this.$el.querySelector('.second-timeline'),\n        updateContainerSize: false,\n        ...secondTimelineConfig\n      });\n    },\n    renderSecondTimeline(layer) {\n      const ganttContainerWidth = this.$refs.ganttContainer.clientWidth;\n      const ganttContainerHeight = this.$refs.ganttContainer.clientHeight;\n      const secondTimelineHeight = layer.config.scale_height;\n      const secondTimelineContainer = layer.container;\n      secondTimelineContainer.style.width = ganttContainerWidth + 'px';\n      secondTimelineContainer.style.height = secondTimelineHeight + 'px';\n\n      // 渲染第二个时间轴内容\n      // 可以使用HTML、CSS或其他前端框架来自定义第二个时间轴的样式和内容\n    },\n\n    secondTimelineTpl(task) {\n      // 返回第二个时间轴列的内容的HTML模板，例如：\n      return `<div class=\"second-timeline-container\">\n                <div class=\"second-timeline-content\">\n                  ${task.text}\n                </div>\n              </div>`;\n    }\n  }\n};","map":{"version":3,"names":["gantt","name","mounted","config","columns","width","template","secondTimelineTpl","attachEvent","task","init","$refs","ganttContainer","parse","getChartData","initSecondTimeline","methods","id","text","start_date","duration","secondTimelineConfig","scale_height","ext","inlineLayers","add","renderer","renderSecondTimeline","container","$el","querySelector","updateContainerSize","layer","ganttContainerWidth","clientWidth","ganttContainerHeight","clientHeight","secondTimelineHeight","secondTimelineContainer","style","height"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div class=\"gantt-container\">\r\n    <div ref=\"ganttContainer\" style=\"width: 100%; height: 600px\"></div>\r\n    <div class=\"second-timeline\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport gantt from 'dhtmlx-gantt/codebase/dhtmlxgantt.js';\r\n\r\nexport default {\r\n  name: 'GanttChart',\r\n  mounted() {\r\n    gantt.config.columns = [\r\n      // 定义你需要的其他列\r\n      { name: 'Second Timeline', width: 200, template: this.secondTimelineTpl }\r\n    ];\r\n\r\n    gantt.attachEvent('onBeforeTaskDisplay', (task) => {\r\n      // 返回true表示显示该任务，根据需要过滤任务\r\n      return true;\r\n    });\r\n\r\n    gantt.init(this.$refs.ganttContainer);\r\n    gantt.parse(this.getChartData());\r\n    this.initSecondTimeline();\r\n  },\r\n  methods: {\r\n    getChartData() {\r\n      // 返回甘特图的任务数据，根据需要自定义\r\n      return [\r\n        { id: 1, text: 'Task 1', start_date: '2023-06-01', duration: 5 },\r\n        { id: 2, text: 'Task 2', start_date: '2023-06-06', duration: 3 },\r\n        { id: 3, text: 'Task 3', start_date: '2023-06-10', duration: 8 },\r\n        // 更多任务数据...\r\n      ];\r\n    },\r\n    initSecondTimeline() {\r\n      const secondTimelineConfig = {\r\n       scale_height: 50 \r\n      }\r\n\r\n      gantt.ext.inlineLayers.add('second-timeline', {\r\n        renderer: this.renderSecondTimeline,\r\n        container: this.$el.querySelector('.second-timeline'),\r\n        updateContainerSize: false,\r\n        ...secondTimelineConfig\r\n      });\r\n    },\r\n    renderSecondTimeline(layer) {\r\n      const ganttContainerWidth = this.$refs.ganttContainer.clientWidth;\r\n      const ganttContainerHeight = this.$refs.ganttContainer.clientHeight;\r\n      const secondTimelineHeight = layer.config.scale_height;\r\n\r\n      const secondTimelineContainer = layer.container;\r\n      secondTimelineContainer.style.width = ganttContainerWidth + 'px';\r\n      secondTimelineContainer.style.height = secondTimelineHeight + 'px';\r\n\r\n      // 渲染第二个时间轴内容\r\n      // 可以使用HTML、CSS或其他前端框架来自定义第二个时间轴的样式和内容\r\n    },\r\n    secondTimelineTpl(task) {\r\n      // 返回第二个时间轴列的内容的HTML模板，例如：\r\n      return `<div class=\"second-timeline-container\">\r\n                <div class=\"second-timeline-content\">\r\n                  ${task.text}\r\n                </div>\r\n              </div>`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.gantt-container {\r\n  position: relative;\r\n}\r\n\r\n.second-timeline {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n</style>\r\n"],"mappings":"AAQA;AACA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,QAAA;IACAF,KAAA,CAAAG,MAAA,CAAAC,OAAA;IACA;IACA;MAAAH,IAAA;MAAAI,KAAA;MAAAC,QAAA,OAAAC;IAAA,EACA;IAEAP,KAAA,CAAAQ,WAAA,wBAAAC,IAAA;MACA;MACA;IACA;IAEAT,KAAA,CAAAU,IAAA,MAAAC,KAAA,CAAAC,cAAA;IACAZ,KAAA,CAAAa,KAAA,MAAAC,YAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACAF,aAAA;MACA;MACA,QACA;QAAAG,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;MAAA,GACA;QAAAH,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;MAAA,GACA;QAAAH,EAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,QAAA;MAAA;MACA;MAAA,CACA;IACA;;IACAL,mBAAA;MACA,MAAAM,oBAAA;QACAC,YAAA;MACA;MAEAtB,KAAA,CAAAuB,GAAA,CAAAC,YAAA,CAAAC,GAAA;QACAC,QAAA,OAAAC,oBAAA;QACAC,SAAA,OAAAC,GAAA,CAAAC,aAAA;QACAC,mBAAA;QACA,GAAAV;MACA;IACA;IACAM,qBAAAK,KAAA;MACA,MAAAC,mBAAA,QAAAtB,KAAA,CAAAC,cAAA,CAAAsB,WAAA;MACA,MAAAC,oBAAA,QAAAxB,KAAA,CAAAC,cAAA,CAAAwB,YAAA;MACA,MAAAC,oBAAA,GAAAL,KAAA,CAAA7B,MAAA,CAAAmB,YAAA;MAEA,MAAAgB,uBAAA,GAAAN,KAAA,CAAAJ,SAAA;MACAU,uBAAA,CAAAC,KAAA,CAAAlC,KAAA,GAAA4B,mBAAA;MACAK,uBAAA,CAAAC,KAAA,CAAAC,MAAA,GAAAH,oBAAA;;MAEA;MACA;IACA;;IACA9B,kBAAAE,IAAA;MACA;MACA;AACA;AACA,oBAAAA,IAAA,CAAAS,IAAA;AACA;AACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}