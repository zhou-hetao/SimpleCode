{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = require(\"@/api/user/index\");\nvar _elementUi = require(\"element-ui\");\nvar _vuex = require(\"vuex\");\nvar _default = {\n  data() {\n    return {\n      formData: {\n        username: \"admin\",\n        password: 123456,\n        Verificationcode: undefined,\n        phone: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }],\n        Verificationcode: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      percentage: \"65%\",\n      countdown: 0,\n      buttonText: \"获取验证码\",\n      code: 0 //获取的验证码\n    };\n  },\n\n  computed: {},\n  methods: {\n    ...(0, _vuex.mapActions)(['login']),\n    submitForm() {\n      this.$refs['elForm'].validate(valid => {\n        if (!valid) return;\n        // TODO 提交表单'\n        if (this.formData.Verificationcode == this.code) {\n          this.login(this.formData);\n        } else {\n          (0, _elementUi.Message)({\n            message: '验证码错误',\n            type: \"error\",\n            duration: 3000\n          });\n        }\n      });\n    },\n    //提交校验\n    resetForm() {\n      this.$refs['elForm'].resetFields();\n    },\n    //获取验证码\n    getCode() {\n      if (this.countdown == 0 && this.formData.phone != \"\") {\n        this.checkPhoneNumber(this.formData.phone);\n      } else if (this.formData.phone == \"\") {\n        this.submitForm();\n        (0, _elementUi.Message)({\n          message: \"请填写手机号\",\n          type: \"error\",\n          duration: 3000\n        });\n      } else {\n        (0, _elementUi.Message)({\n          message: this.buttonText,\n          type: \"error\",\n          duration: 3000\n        });\n      }\n    },\n    //按钮倒计时\n    startCountdown() {\n      if (this.countdown > 0) {\n        return;\n      } else {\n        this.countdown = 60;\n        this.buttonText = `${this.countdown} 秒后获取`;\n        this.percentage = '63%';\n        const intervalId = setInterval(() => {\n          this.countdown--;\n          this.buttonText = `${this.countdown} 秒后获取`;\n          this.percentage = '63%';\n          if (this.countdown === 0) {\n            clearInterval(intervalId);\n            this.buttonText = '获取验证码';\n            this.percentage = '65%';\n          }\n        }, 1000);\n      }\n    },\n    checkPhoneNumber(phoneNumber) {\n      // 以 1 开头，后面跟 10 位数字\n      const reg = /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1589]))\\d{8}$/;\n      console.log('reg.test(phoneNumber)', phoneNumber);\n      if (reg.test(phoneNumber)) {\n        (0, _index.getUserCode)({\n          phone: this.formData.phone\n        }).then(res => {\n          console.log(res);\n          if (res.code == 200) {\n            this.code = res.data;\n          }\n          this.startCountdown();\n        });\n      } else {\n        (0, _elementUi.Message)({\n          message: '手机号有误',\n          type: \"error\",\n          duration: 3000\n        });\n      }\n    }\n  }\n};\nexports.default = _default;","map":{"version":3,"names":["_index","require","_elementUi","_vuex","_default","data","formData","username","password","Verificationcode","undefined","phone","rules","required","message","trigger","percentage","countdown","buttonText","code","computed","methods","mapActions","submitForm","$refs","validate","valid","login","Message","type","duration","resetForm","resetFields","getCode","checkPhoneNumber","startCountdown","intervalId","setInterval","clearInterval","phoneNumber","reg","console","log","test","getUserCode","then","res","exports","default"],"sources":["src/views/Login/Login.vue"],"sourcesContent":["<template>\r\n    <div id=\"login\">\r\n        <div class=\"login-from-box\">\r\n            <h2>登录</h2>\r\n            <el-form ref=\"elForm\" :model=\"formData\" :rules=\"rules\" size=\"medium\" label-width=\"75px\" label-position=\"left\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"formData.username\" placeholder=\"请输入用户名\" clearable prefix-icon='el-icon-user-solid'>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"formData.password\" placeholder=\"请输入密码\" clearable prefix-icon='el-icon-info'\r\n                        show-password :style=\"{ width: '100%' }\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机号\" prop=\"phone\">\r\n                    <el-input v-model=\"formData.phone\" placeholder=\"请输入您的手机号\" clearable prefix-icon='el-icon-user-solid'>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"验证码\" prop=\"Verificationcode\">\r\n                    <el-input v-model=\"formData.Verificationcode\" placeholder=\"请输入验证码\" clearable\r\n                        prefix-icon='el-icon-loading' :style=\"{ width: percentage }\"></el-input>\r\n                    <el-button @click=\"getCode\">{{ buttonText }}</el-button>\r\n                </el-form-item>\r\n                <el-form-item size=\"large\" style=\"margin-left: -80px;\">\r\n                    <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n                    <el-button @click=\"resetForm\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { getUserCode, userLogin } from \"@/api/user/index\"\r\nimport { Message } from \"element-ui\"\r\nimport { mapActions } from 'vuex'\r\nexport default {\r\n    data() {\r\n        return {\r\n            formData: {\r\n                username: \"admin\",\r\n                password: 123456,\r\n                Verificationcode: undefined,\r\n                phone: \"\",\r\n            },\r\n            rules: {\r\n                username: [{\r\n                    required: true,\r\n                    message: '请输入用户名',\r\n                    trigger: 'blur'\r\n                }],\r\n                password: [{\r\n                    required: true,\r\n                    message: '请输入密码',\r\n                    trigger: 'blur'\r\n                }],\r\n                phone: [{\r\n                    required: true,\r\n                    message: '请输入手机号',\r\n                    trigger: 'blur'\r\n                }],\r\n                Verificationcode: [{\r\n                    required: true,\r\n                    message: '请输入验证码',\r\n                    trigger: 'blur'\r\n                }],\r\n            },\r\n            percentage: \"65%\",\r\n            countdown: 0,\r\n            buttonText: \"获取验证码\",\r\n            code: 0,//获取的验证码\r\n        }\r\n    },\r\n    computed: {\r\n\r\n    },\r\n    methods: {\r\n        ...mapActions(['login']),\r\n        submitForm() {\r\n            this.$refs['elForm'].validate(valid => {\r\n                if (!valid) return\r\n                // TODO 提交表单'\r\n                if (this.formData.Verificationcode == this.code) {\r\n                    this.login(this.formData)\r\n                } else {\r\n                    Message({\r\n                        message: '验证码错误',\r\n                        type: \"error\",\r\n                        duration: 3000,\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        //提交校验\r\n        resetForm() {\r\n            this.$refs['elForm'].resetFields()\r\n        },\r\n        //获取验证码\r\n        getCode() {\r\n            if (this.countdown == 0 && this.formData.phone != \"\") {\r\n                this.checkPhoneNumber(this.formData.phone)\r\n            } else if (this.formData.phone == \"\") {\r\n                this.submitForm()\r\n                Message({\r\n                    message: \"请填写手机号\",\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                })\r\n            } else {\r\n                Message({\r\n                    message: this.buttonText,\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                })\r\n            }\r\n\r\n        },\r\n        //按钮倒计时\r\n        startCountdown() {\r\n            if (this.countdown > 0) {\r\n                return\r\n            } else {\r\n                this.countdown = 60\r\n                this.buttonText = `${this.countdown} 秒后获取`\r\n                this.percentage = '63%'\r\n                const intervalId = setInterval(() => {\r\n                    this.countdown--\r\n                    this.buttonText = `${this.countdown} 秒后获取`\r\n                    this.percentage = '63%'\r\n                    if (this.countdown === 0) {\r\n                        clearInterval(intervalId)\r\n                        this.buttonText = '获取验证码'\r\n                        this.percentage = '65%'\r\n                    }\r\n                }, 1000)\r\n            }\r\n\r\n\r\n        },\r\n        checkPhoneNumber(phoneNumber) {\r\n            // 以 1 开头，后面跟 10 位数字\r\n            const reg = /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1589]))\\d{8}$/;\r\n            console.log('reg.test(phoneNumber)', phoneNumber);\r\n            if (reg.test(phoneNumber)) {\r\n                getUserCode({ phone: this.formData.phone }).then((res) => {\r\n                    console.log(res);\r\n                    if (res.code == 200) {\r\n                        this.code = res.data\r\n                    }\r\n                    this.startCountdown()\r\n                })\r\n            } else {\r\n                Message({\r\n                    message: '手机号有误',\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#login {\r\n    width: 100%;\r\n    height: 100vh;\r\n    text-align: center;\r\n    background-color: rgb(245, 245, 245);\r\n    position: relative;\r\n    background-image: url(@/assets/bk.png);\r\n    background-size: 100% 100%;\r\n    background-repeat: repeat;\r\n\r\n    .login-from-box {\r\n        width: 400px;\r\n        height: 315px;\r\n        margin: 0 auto;\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin-top: -200px;\r\n        margin-left: -250px;\r\n        background-color: white;\r\n        padding: 50px 50px 50px 50px;\r\n        border-radius: 30px;\r\n\r\n    }\r\n}\r\n</style>"],"mappings":";;;;;;AAgCA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAAA,IAAAG,QAAA,GACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,gBAAA,EAAAC,SAAA;QACAC,KAAA;MACA;MACAC,KAAA;QACAL,QAAA;UACAM,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;QACAP,QAAA;UACAK,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;QACAJ,KAAA;UACAE,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;QACAN,gBAAA;UACAI,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MACA;MACAC,UAAA;MACAC,SAAA;MACAC,UAAA;MACAC,IAAA;IACA;EACA;;EACAC,QAAA,GAEA;EACAC,OAAA;IACA,OAAAC,gBAAA;IACAC,WAAA;MACA,KAAAC,KAAA,WAAAC,QAAA,CAAAC,KAAA;QACA,KAAAA,KAAA;QACA;QACA,SAAApB,QAAA,CAAAG,gBAAA,SAAAU,IAAA;UACA,KAAAQ,KAAA,MAAArB,QAAA;QACA;UACA,IAAAsB,kBAAA;YACAd,OAAA;YACAe,IAAA;YACAC,QAAA;UACA;QACA;MACA;IACA;IACA;IACAC,UAAA;MACA,KAAAP,KAAA,WAAAQ,WAAA;IACA;IACA;IACAC,QAAA;MACA,SAAAhB,SAAA,cAAAX,QAAA,CAAAK,KAAA;QACA,KAAAuB,gBAAA,MAAA5B,QAAA,CAAAK,KAAA;MACA,gBAAAL,QAAA,CAAAK,KAAA;QACA,KAAAY,UAAA;QACA,IAAAK,kBAAA;UACAd,OAAA;UACAe,IAAA;UACAC,QAAA;QACA;MACA;QACA,IAAAF,kBAAA;UACAd,OAAA,OAAAI,UAAA;UACAW,IAAA;UACAC,QAAA;QACA;MACA;IAEA;IACA;IACAK,eAAA;MACA,SAAAlB,SAAA;QACA;MACA;QACA,KAAAA,SAAA;QACA,KAAAC,UAAA,WAAAD,SAAA;QACA,KAAAD,UAAA;QACA,MAAAoB,UAAA,GAAAC,WAAA;UACA,KAAApB,SAAA;UACA,KAAAC,UAAA,WAAAD,SAAA;UACA,KAAAD,UAAA;UACA,SAAAC,SAAA;YACAqB,aAAA,CAAAF,UAAA;YACA,KAAAlB,UAAA;YACA,KAAAF,UAAA;UACA;QACA;MACA;IAGA;IACAkB,iBAAAK,WAAA;MACA;MACA,MAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,0BAAAH,WAAA;MACA,IAAAC,GAAA,CAAAG,IAAA,CAAAJ,WAAA;QACA,IAAAK,kBAAA;UAAAjC,KAAA,OAAAL,QAAA,CAAAK;QAAA,GAAAkC,IAAA,CAAAC,GAAA;UACAL,OAAA,CAAAC,GAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAA3B,IAAA;YACA,KAAAA,IAAA,GAAA2B,GAAA,CAAAzC,IAAA;UACA;UACA,KAAA8B,cAAA;QACA;MACA;QACA,IAAAP,kBAAA;UACAd,OAAA;UACAe,IAAA;UACAC,QAAA;QACA;MACA;IACA;EAEA;AACA;AAAAiB,OAAA,CAAAC,OAAA,GAAA5C,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}