{"ast":null,"code":"import { gantt } from 'dhtmlx-gantt';\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nexport default {\n  name: 'gantt',\n  props: {\n    mainData: Array\n  },\n  data() {\n    return {\n      mainGanttData: {\n        data: [],\n        links: []\n      }\n      // demo数据\n      // mainGanttData:{\n      //   data:[\n      // {\n      //   id: \"client\",\n      //   text: \"客户端\",\n      //   start_date: \"2020-4-12\",\n      //   demand: \"-\",\n      //   duration: 3,\n      // },\n      // {\n      //   id: \"web\",\n      //   text: \"Web开发组\",\n      //   start_date: \"2020-4-12\",\n      //   demand: \"-\",\n      //   duration: 1,\n      //   parent: \"client\",\n      // },\n      // {\n      //   id: \"sakurahuang\",\n      //   text: \"sakurahuang\",\n      //   start_date: \"2020-4-12\",\n      //   demand: \"联系我小程序插件的cgi从node迁移到hiweb\",\n      //   duration: 1,\n      //   parent: \"web\",\n      // },\n      // {\n      //   id: \"sakurahuang1\",\n      //   text: \"\",\n      //   start_date: \"2020-4-12\",\n      //   demand: \"自研白板\",\n      //   duration: 1,\n      //   parent: \"sakurahuang\",\n      // },\n      // {\n      //   id: \"tdreamhuang\",\n      //   text: \"tdreamhuang\",\n      //   start_date: \"2020-4-12\",\n      //   demand: \"联系我小程序插件的cgi从node迁移到hiweb\",\n      //   duration: 1,\n      //   parent: \"web\",\n      // },\n      //   ],\n      //   links: [],\n      // },\n    };\n  },\n\n  mounted() {\n    this.handleGantt();\n  },\n  watch: {\n    mainData() {\n      this.handleGantt();\n    }\n  },\n  methods: {\n    handleGantt() {\n      this.mainGanttData[\"data\"] = this.mainData;\n      const self = this;\n      // 这里设置左边列的标题，宽度，标题对齐方式\n      gantt.config.columns = [{\n        name: \"text\",\n        label: \"所属中心\",\n        align: \"left\",\n        width: 200,\n        tree: true,\n        template: function (obj) {\n          return obj.text;\n        }\n      }, {\n        name: \"text\",\n        label: \"标题/备注\",\n        align: \"center\",\n        width: 200,\n        template: function (obj) {\n          if (obj.demand) {\n            return `<a href=\"${obj.storylink}\" target=\"_blank\">${obj.demand}</a>`;\n          }\n        }\n      }];\n      // 禁用红色弹框\n      gantt.config.show_errors = false;\n      // 只读模式\n      gantt.config.readonly = true;\n      // 设置日期格式，以及步长\n      gantt.config.xml_date = \"%Y-%m-%d\";\n      gantt.config.date_scale = \"%Y-%m\";\n      gantt.config.subscales = [{\n        unit: \"day\",\n        step: 1,\n        date: \"%d\"\n      }];\n      gantt.config.duration_unit = \"day\";\n      gantt.config.duration_step = 1;\n\n      // 使用气泡和竖线要在这里加配置\n      gantt.plugins({\n        tooltip: true,\n        marker: true\n      });\n      gantt.init(this.$refs.gantt);\n      // console.log(\"mainGanttData\");\n      // console.log(this.mainGanttData);\n      // 这里要清一下，不然2个版本互切的时候，任务会相互影响\n      gantt.clearAll();\n      gantt.parse(this.mainGanttData);\n      if (this.mainGanttData.data.length === 0) {\n        gantt.clearAll();\n      }\n      gantt.eachTask(function (task) {\n        task.$open = true;\n      });\n      gantt.render();\n      // 设置柱形工作条颜色和文字\n      this.setGanttTaskCSS(gantt);\n      // 设置鼠标悬浮气泡\n      this.setGanttTooltip(gantt);\n\n      // 设置竖线\n      this.setGanttMarker(gantt);\n\n      // gantt.attachEvent(\"onError\", function (errorMessage) {\n      //   debugger;\n      //   return true;\n      // });\n    },\n\n    setGanttTaskCSS(gantt) {\n      gantt.templates.task_text = function (start, end, task) {\n        if (task.func_cnt || task.func_cnt === 0) {\n          return `功能需求&技术需求：${task.func_cnt}个，工时： ${task.work_time} d`;\n        } else {\n          return \"工时\" + task.work_time + \"d\";\n        }\n        // return \"<b>Text:</b> \"+task.text+\",<b> Holders:</b> \"+task.users;\n      };\n\n      gantt.templates.task_class = function (start, end, task) {\n        if (task.func_cnt || task.func_cnt === 0) {\n          return \"gantt_group_task_color\";\n        }\n      };\n    },\n    setGanttTooltip(gantt) {\n      const self = this;\n      gantt.templates.tooltip_text = function (start, end, task) {\n        // https://docs.dhtmlx.com/chart__dhxtooltip.html\n        if (task.type === \"client\") {\n          return self.handleTooltipClient(task);\n        } else if (task.type === \"group\") {\n          return self.groupToolTip(task);\n        }\n      };\n    },\n    setGanttMarker(gantt) {\n      gantt.addMarker({\n        start_date: new Date(),\n        css: \"gantt_today_marker\",\n        text: \"今日\"\n      });\n      if (this.ganttObj.ted_time) {\n        gantt.addMarker({\n          start_date: new Date(this.ganttObj.ted_time),\n          css: \"gantt_GM_Exper_marker\",\n          text: \"ted体验\"\n        });\n      }\n    },\n    handleTooltipClient(task) {\n      let tpl = `<header style=\"display: flex;\">\n        <section style=\"width: 100px;\"></section>\n        <section style=\"width: 40px;\">功能</section>\n        <section style=\"width: 40px;\">技术</section>\n        <section style=\"width: 40px;\">其他</section>\n        <section style=\"width: 40px;\">bug</section>\n    </header>\n    <section style=\"display: flex;\">\n        <section style=\"width: 100px;margin-right:5px;\">总和</section>\n        <section style=\"width: 40px;\">${task.func_cnt}</section>\n        <section style=\"width: 40px;\">${task.tech_cnt}</section>\n        <section style=\"width: 40px;\">${task.other_cnt}</section>\n        <section style=\"width: 40px;\">${task.bug_cnt}</section>\n    </section>`;\n      if (task.groupInfo && task.groupInfo.length > 0) {\n        task.groupInfo.forEach(group => {\n          tpl += `<section style=\"display: flex;\">\n        <section style=\"width: 100px;overflow:hidden;margin-right:5px;\">${group.text}</section>\n        <section style=\"width: 40px;\">${group.func_cnt}</section>\n        <section style=\"width: 40px;\">${group.tech_cnt}</section>\n        <section style=\"width: 40px;\">${group.other_cnt}</section>\n        <section style=\"width: 40px;\">${group.bug_cnt}</section>\n    </section>`;\n        });\n      }\n      return tpl;\n    },\n    groupToolTip(task) {\n      let tpl = `<header style=\"display: flex;\">\n        <section style=\"width: 40px;\">功能</section>\n        <section style=\"width: 40px;\">技术</section>\n        <section style=\"width: 40px;\">其他</section>\n        <section style=\"width: 40px;\">bug</section>\n    </header>\n    <section style=\"display: flex;\">\n        <section style=\"width: 40px;\">${task.func_cnt}</section>\n        <section style=\"width: 40px;\">${task.tech_cnt}</section>\n        <section style=\"width: 40px;\">${task.other_cnt}</section>\n        <section style=\"width: 40px;\">${task.bug_cnt}</section>\n    </section>`;\n      return tpl;\n    }\n  }\n};","map":{"version":3,"names":["gantt","name","props","mainData","Array","data","mainGanttData","links","mounted","handleGantt","watch","methods","self","config","columns","label","align","width","tree","template","obj","text","demand","storylink","show_errors","readonly","xml_date","date_scale","subscales","unit","step","date","duration_unit","duration_step","plugins","tooltip","marker","init","$refs","clearAll","parse","length","eachTask","task","$open","render","setGanttTaskCSS","setGanttTooltip","setGanttMarker","templates","task_text","start","end","func_cnt","work_time","task_class","tooltip_text","type","handleTooltipClient","groupToolTip","addMarker","start_date","Date","css","ganttObj","ted_time","tpl","tech_cnt","other_cnt","bug_cnt","groupInfo","forEach","group"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div ref=\"gantt\"></div>\r\n</template>\r\n \r\n<script>\r\nimport {gantt} from 'dhtmlx-gantt';\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nexport default {\r\n  name: 'gantt',\r\n  props: {\r\n    mainData: Array,\r\n  },\r\ndata() {\r\n    return {\r\n      mainGanttData: {\r\n        data: [],\r\n        links: [],\r\n      },\r\n      // demo数据\r\n      // mainGanttData:{\r\n      //   data:[\r\n      // {\r\n      //   id: \"client\",\r\n      //   text: \"客户端\",\r\n      //   start_date: \"2020-4-12\",\r\n      //   demand: \"-\",\r\n      //   duration: 3,\r\n      // },\r\n      // {\r\n      //   id: \"web\",\r\n      //   text: \"Web开发组\",\r\n      //   start_date: \"2020-4-12\",\r\n      //   demand: \"-\",\r\n      //   duration: 1,\r\n      //   parent: \"client\",\r\n      // },\r\n      // {\r\n      //   id: \"sakurahuang\",\r\n      //   text: \"sakurahuang\",\r\n      //   start_date: \"2020-4-12\",\r\n      //   demand: \"联系我小程序插件的cgi从node迁移到hiweb\",\r\n      //   duration: 1,\r\n      //   parent: \"web\",\r\n      // },\r\n      // {\r\n      //   id: \"sakurahuang1\",\r\n      //   text: \"\",\r\n      //   start_date: \"2020-4-12\",\r\n      //   demand: \"自研白板\",\r\n      //   duration: 1,\r\n      //   parent: \"sakurahuang\",\r\n      // },\r\n      // {\r\n      //   id: \"tdreamhuang\",\r\n      //   text: \"tdreamhuang\",\r\n      //   start_date: \"2020-4-12\",\r\n      //   demand: \"联系我小程序插件的cgi从node迁移到hiweb\",\r\n      //   duration: 1,\r\n      //   parent: \"web\",\r\n      // },\r\n      //   ],\r\n      //   links: [],\r\n      // },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.handleGantt();\r\n  },\r\n  watch: {\r\n    mainData() {\r\n      this.handleGantt();\r\n    },\r\n  },\r\n  methods: {\r\n    handleGantt() {\r\n      this.mainGanttData[\"data\"] = this.mainData;\r\n      const self = this;\r\n      // 这里设置左边列的标题，宽度，标题对齐方式\r\n      gantt.config.columns = [\r\n        {\r\n          name: \"text\",\r\n          label: \"所属中心\",\r\n          align: \"left\",\r\n          width: 200,\r\n          tree: true,\r\n          template: function (obj) {\r\n            return obj.text;\r\n          },\r\n        },\r\n        {\r\n          name: \"text\",\r\n          label: \"标题/备注\",\r\n          align: \"center\",\r\n          width: 200,\r\n          template: function (obj) {\r\n            if (obj.demand) {\r\n              return `<a href=\"${obj.storylink}\" target=\"_blank\">${obj.demand}</a>`;\r\n            }\r\n          },\r\n        },\r\n      ];\r\n      // 禁用红色弹框\r\n      gantt.config.show_errors = false;\r\n      // 只读模式\r\n      gantt.config.readonly = true;\r\n      // 设置日期格式，以及步长\r\n      gantt.config.xml_date = \"%Y-%m-%d\";\r\n      gantt.config.date_scale = \"%Y-%m\";\r\n      gantt.config.subscales = [\r\n        {\r\n          unit: \"day\",\r\n          step: 1,\r\n          date: \"%d\",\r\n        },\r\n      ];\r\n      gantt.config.duration_unit = \"day\";\r\n      gantt.config.duration_step = 1;\r\n\r\n      // 使用气泡和竖线要在这里加配置\r\n      gantt.plugins({\r\n        tooltip: true,\r\n        marker: true,\r\n      });\r\n\r\n      gantt.init(this.$refs.gantt);\r\n      // console.log(\"mainGanttData\");\r\n      // console.log(this.mainGanttData);\r\n      // 这里要清一下，不然2个版本互切的时候，任务会相互影响\r\n      gantt.clearAll();\r\n      gantt.parse(this.mainGanttData);\r\n      if (this.mainGanttData.data.length === 0) {\r\n        gantt.clearAll();\r\n      }\r\n      gantt.eachTask(function (task) {\r\n        task.$open = true;\r\n      });\r\n      gantt.render();\r\n      // 设置柱形工作条颜色和文字\r\n      this.setGanttTaskCSS(gantt);\r\n      // 设置鼠标悬浮气泡\r\n      this.setGanttTooltip(gantt);\r\n\r\n      // 设置竖线\r\n      this.setGanttMarker(gantt);\r\n\r\n      // gantt.attachEvent(\"onError\", function (errorMessage) {\r\n      //   debugger;\r\n      //   return true;\r\n      // });\r\n    },\r\n    setGanttTaskCSS(gantt) {\r\n      gantt.templates.task_text = function (start, end, task) {\r\n        if (task.func_cnt || task.func_cnt === 0) {\r\n          return `功能需求&技术需求：${task.func_cnt}个，工时： ${task.work_time} d`;\r\n        } else {\r\n          return \"工时\" + task.work_time + \"d\";\r\n        }\r\n        // return \"<b>Text:</b> \"+task.text+\",<b> Holders:</b> \"+task.users;\r\n      };\r\n      gantt.templates.task_class = function (start, end, task) {\r\n        if (task.func_cnt || task.func_cnt === 0) {\r\n          return \"gantt_group_task_color\";\r\n        }\r\n      };\r\n    },\r\n    setGanttTooltip(gantt) {\r\n      const self = this;\r\n      gantt.templates.tooltip_text = function (start, end, task) {\r\n        // https://docs.dhtmlx.com/chart__dhxtooltip.html\r\n        if (task.type === \"client\") {\r\n          return self.handleTooltipClient(task);\r\n        } else if (task.type === \"group\") {\r\n          return self.groupToolTip(task);\r\n        }\r\n      };\r\n    },\r\n    setGanttMarker(gantt) {\r\n      gantt.addMarker({\r\n        start_date: new Date(),\r\n        css: \"gantt_today_marker\",\r\n        text: \"今日\",\r\n      });\r\n      if (this.ganttObj.ted_time) {\r\n        gantt.addMarker({\r\n          start_date: new Date(this.ganttObj.ted_time),\r\n          css: \"gantt_GM_Exper_marker\",\r\n          text: \"ted体验\",\r\n        });\r\n      }\r\n    },\r\n    handleTooltipClient(task) {\r\n      let tpl = `<header style=\"display: flex;\">\r\n        <section style=\"width: 100px;\"></section>\r\n        <section style=\"width: 40px;\">功能</section>\r\n        <section style=\"width: 40px;\">技术</section>\r\n        <section style=\"width: 40px;\">其他</section>\r\n        <section style=\"width: 40px;\">bug</section>\r\n    </header>\r\n    <section style=\"display: flex;\">\r\n        <section style=\"width: 100px;margin-right:5px;\">总和</section>\r\n        <section style=\"width: 40px;\">${task.func_cnt}</section>\r\n        <section style=\"width: 40px;\">${task.tech_cnt}</section>\r\n        <section style=\"width: 40px;\">${task.other_cnt}</section>\r\n        <section style=\"width: 40px;\">${task.bug_cnt}</section>\r\n    </section>`;\r\n      if (task.groupInfo && task.groupInfo.length > 0) {\r\n        task.groupInfo.forEach((group) => {\r\n          tpl += `<section style=\"display: flex;\">\r\n        <section style=\"width: 100px;overflow:hidden;margin-right:5px;\">${group.text}</section>\r\n        <section style=\"width: 40px;\">${group.func_cnt}</section>\r\n        <section style=\"width: 40px;\">${group.tech_cnt}</section>\r\n        <section style=\"width: 40px;\">${group.other_cnt}</section>\r\n        <section style=\"width: 40px;\">${group.bug_cnt}</section>\r\n    </section>`;\r\n        });\r\n      }\r\n      return tpl;\r\n    },\r\n    groupToolTip(task) {\r\n      let tpl = `<header style=\"display: flex;\">\r\n        <section style=\"width: 40px;\">功能</section>\r\n        <section style=\"width: 40px;\">技术</section>\r\n        <section style=\"width: 40px;\">其他</section>\r\n        <section style=\"width: 40px;\">bug</section>\r\n    </header>\r\n    <section style=\"display: flex;\">\r\n        <section style=\"width: 40px;\">${task.func_cnt}</section>\r\n        <section style=\"width: 40px;\">${task.tech_cnt}</section>\r\n        <section style=\"width: 40px;\">${task.other_cnt}</section>\r\n        <section style=\"width: 40px;\">${task.bug_cnt}</section>\r\n    </section>`;\r\n      return tpl;\r\n    },\r\n  }\r\n}\r\n</script>\r\n \r\n"],"mappings":"AAKA,SAAAA,KAAA;AACA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,QAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,aAAA;QACAD,IAAA;QACAE,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,KAAA;IACAP,SAAA;MACA,KAAAM,WAAA;IACA;EACA;EACAE,OAAA;IACAF,YAAA;MACA,KAAAH,aAAA,gBAAAH,QAAA;MACA,MAAAS,IAAA;MACA;MACAZ,KAAA,CAAAa,MAAA,CAAAC,OAAA,IACA;QACAb,IAAA;QACAc,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,IAAA;QACAC,QAAA,WAAAA,CAAAC,GAAA;UACA,OAAAA,GAAA,CAAAC,IAAA;QACA;MACA,GACA;QACApB,IAAA;QACAc,KAAA;QACAC,KAAA;QACAC,KAAA;QACAE,QAAA,WAAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAE,MAAA;YACA,mBAAAF,GAAA,CAAAG,SAAA,qBAAAH,GAAA,CAAAE,MAAA;UACA;QACA;MACA,EACA;MACA;MACAtB,KAAA,CAAAa,MAAA,CAAAW,WAAA;MACA;MACAxB,KAAA,CAAAa,MAAA,CAAAY,QAAA;MACA;MACAzB,KAAA,CAAAa,MAAA,CAAAa,QAAA;MACA1B,KAAA,CAAAa,MAAA,CAAAc,UAAA;MACA3B,KAAA,CAAAa,MAAA,CAAAe,SAAA,IACA;QACAC,IAAA;QACAC,IAAA;QACAC,IAAA;MACA,EACA;MACA/B,KAAA,CAAAa,MAAA,CAAAmB,aAAA;MACAhC,KAAA,CAAAa,MAAA,CAAAoB,aAAA;;MAEA;MACAjC,KAAA,CAAAkC,OAAA;QACAC,OAAA;QACAC,MAAA;MACA;MAEApC,KAAA,CAAAqC,IAAA,MAAAC,KAAA,CAAAtC,KAAA;MACA;MACA;MACA;MACAA,KAAA,CAAAuC,QAAA;MACAvC,KAAA,CAAAwC,KAAA,MAAAlC,aAAA;MACA,SAAAA,aAAA,CAAAD,IAAA,CAAAoC,MAAA;QACAzC,KAAA,CAAAuC,QAAA;MACA;MACAvC,KAAA,CAAA0C,QAAA,WAAAC,IAAA;QACAA,IAAA,CAAAC,KAAA;MACA;MACA5C,KAAA,CAAA6C,MAAA;MACA;MACA,KAAAC,eAAA,CAAA9C,KAAA;MACA;MACA,KAAA+C,eAAA,CAAA/C,KAAA;;MAEA;MACA,KAAAgD,cAAA,CAAAhD,KAAA;;MAEA;MACA;MACA;MACA;IACA;;IACA8C,gBAAA9C,KAAA;MACAA,KAAA,CAAAiD,SAAA,CAAAC,SAAA,aAAAC,KAAA,EAAAC,GAAA,EAAAT,IAAA;QACA,IAAAA,IAAA,CAAAU,QAAA,IAAAV,IAAA,CAAAU,QAAA;UACA,oBAAAV,IAAA,CAAAU,QAAA,SAAAV,IAAA,CAAAW,SAAA;QACA;UACA,cAAAX,IAAA,CAAAW,SAAA;QACA;QACA;MACA;;MACAtD,KAAA,CAAAiD,SAAA,CAAAM,UAAA,aAAAJ,KAAA,EAAAC,GAAA,EAAAT,IAAA;QACA,IAAAA,IAAA,CAAAU,QAAA,IAAAV,IAAA,CAAAU,QAAA;UACA;QACA;MACA;IACA;IACAN,gBAAA/C,KAAA;MACA,MAAAY,IAAA;MACAZ,KAAA,CAAAiD,SAAA,CAAAO,YAAA,aAAAL,KAAA,EAAAC,GAAA,EAAAT,IAAA;QACA;QACA,IAAAA,IAAA,CAAAc,IAAA;UACA,OAAA7C,IAAA,CAAA8C,mBAAA,CAAAf,IAAA;QACA,WAAAA,IAAA,CAAAc,IAAA;UACA,OAAA7C,IAAA,CAAA+C,YAAA,CAAAhB,IAAA;QACA;MACA;IACA;IACAK,eAAAhD,KAAA;MACAA,KAAA,CAAA4D,SAAA;QACAC,UAAA,MAAAC,IAAA;QACAC,GAAA;QACA1C,IAAA;MACA;MACA,SAAA2C,QAAA,CAAAC,QAAA;QACAjE,KAAA,CAAA4D,SAAA;UACAC,UAAA,MAAAC,IAAA,MAAAE,QAAA,CAAAC,QAAA;UACAF,GAAA;UACA1C,IAAA;QACA;MACA;IACA;IACAqC,oBAAAf,IAAA;MACA,IAAAuB,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAAvB,IAAA,CAAAU,QAAA;AACA,wCAAAV,IAAA,CAAAwB,QAAA;AACA,wCAAAxB,IAAA,CAAAyB,SAAA;AACA,wCAAAzB,IAAA,CAAA0B,OAAA;AACA;MACA,IAAA1B,IAAA,CAAA2B,SAAA,IAAA3B,IAAA,CAAA2B,SAAA,CAAA7B,MAAA;QACAE,IAAA,CAAA2B,SAAA,CAAAC,OAAA,CAAAC,KAAA;UACAN,GAAA;AACA,0EAAAM,KAAA,CAAAnD,IAAA;AACA,wCAAAmD,KAAA,CAAAnB,QAAA;AACA,wCAAAmB,KAAA,CAAAL,QAAA;AACA,wCAAAK,KAAA,CAAAJ,SAAA;AACA,wCAAAI,KAAA,CAAAH,OAAA;AACA;QACA;MACA;MACA,OAAAH,GAAA;IACA;IACAP,aAAAhB,IAAA;MACA,IAAAuB,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAAvB,IAAA,CAAAU,QAAA;AACA,wCAAAV,IAAA,CAAAwB,QAAA;AACA,wCAAAxB,IAAA,CAAAyB,SAAA;AACA,wCAAAzB,IAAA,CAAA0B,OAAA;AACA;MACA,OAAAH,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}