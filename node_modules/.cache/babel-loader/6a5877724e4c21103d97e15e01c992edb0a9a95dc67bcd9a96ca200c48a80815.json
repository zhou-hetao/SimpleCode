{"ast":null,"code":"import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\nexport default {\n  name: \"GanttComponent\",\n  data() {\n    return {\n      tasks: {\n        data: [{\n          id: 1,\n          title: \"一号里程碑\",\n          text: \"一号里程碑\",\n          start_date: \"2023-06-24 00:00\",\n          end_date: \"2023-07-28\",\n          prottiem: \"2023-06-24 00:00\",\n          propedtime: \"2023-09-28\",\n          open: true,\n          status: \"进行中\"\n        }, {\n          id: 2,\n          title: \"一号z里程碑\",\n          text: \"一号z里程碑\",\n          start_date: \"2023-06-24 00:00\",\n          end_date: \"2023-08-28\",\n          prottiem: \"2023-06-24 00:00\",\n          propedtime: \"2023-09-28\",\n          open: true,\n          parent: 1,\n          status: \"进行中\"\n        }]\n      }\n    };\n  },\n  mounted() {\n    const ganttContainer = document.querySelector('.gantt-container');\n    gantt.init(ganttContainer);\n    gantt.templates.rightside_scale = function (date, scale, step) {\n      const planStart = gantt.getTask(gantt.getState().selected_task).start_date;\n      const planEnd = gantt.getTask(gantt.getState().selected_task).end_date;\n      const actualStart = gantt.getTask(gantt.getState().selected_task).actual_start_date;\n      const actualEnd = gantt.getTask(gantt.getState().selected_task).actual_end_date;\n      const planStartPercentage = Math.floor((date - planStart) / (planEnd - planStart) * 100);\n      const planEndPercentage = Math.floor((date - planEnd) / (planEnd - planStart) * 100);\n      const actualStartPercentage = Math.floor((date - actualStart) / (actualEnd - actualStart) * 100);\n      const actualEndPercentage = Math.floor((date - actualEnd) / (actualEnd - actualStart) * 100);\n      let html = '';\n      if (planStart && planEnd) {\n        html += '<div class=\"gantt-progress-bar\">';\n        html += '<div class=\"plan-start-bar\" style=\"width: ' + planStartPercentage + '%;\"></div>';\n        html += '<div class=\"plan-end-bar\" style=\"width: ' + planEndPercentage + '%;\"></div>';\n        html += '</div>';\n      }\n      if (actualStart && actualEnd) {\n        html += '<div class=\"gantt-progress-bar\">';\n        html += '<div class=\"actual-start-bar\" style=\"width: ' + actualStartPercentage + '%;\"></div>';\n        html += '<div class=\"actual-end-bar\" style=\"width: ' + actualEndPercentage + '%;\"></div>';\n        html += '</div>';\n      }\n      return html;\n    };\n  },\n  methods: {}\n};","map":{"version":3,"names":["gantt","name","data","tasks","id","title","text","start_date","end_date","prottiem","propedtime","open","status","parent","mounted","ganttContainer","document","querySelector","init","templates","rightside_scale","date","scale","step","planStart","getTask","getState","selected_task","planEnd","actualStart","actual_start_date","actualEnd","actual_end_date","planStartPercentage","Math","floor","planEndPercentage","actualStartPercentage","actualEndPercentage","html","methods"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"gantt\" style=\"width: 100%; height: 500px\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\r\nexport default {\r\n  name: \"GanttComponent\",\r\n  data() {\r\n    return {\r\n      tasks: {\r\n        data: [\r\n          {\r\n            id: 1,\r\n            title: \"一号里程碑\",\r\n            text: \"一号里程碑\",\r\n            start_date: \"2023-06-24 00:00\",\r\n            end_date: \"2023-07-28\",\r\n            prottiem: \"2023-06-24 00:00\",\r\n            propedtime: \"2023-09-28\",\r\n            open: true,\r\n            status: \"进行中\",\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"一号z里程碑\",\r\n            text: \"一号z里程碑\",\r\n            start_date: \"2023-06-24 00:00\",\r\n            end_date: \"2023-08-28\",\r\n            prottiem: \"2023-06-24 00:00\",\r\n            propedtime: \"2023-09-28\",\r\n            open: true,\r\n            parent: 1,\r\n            status: \"进行中\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    const ganttContainer = document.querySelector('.gantt-container');\r\n    gantt.init(ganttContainer);\r\n    \r\n    gantt.templates.rightside_scale = function(date, scale, step){\r\n      const planStart = gantt.getTask(gantt.getState().selected_task).start_date;\r\n      const planEnd = gantt.getTask(gantt.getState().selected_task).end_date;\r\n      const actualStart = gantt.getTask(gantt.getState().selected_task).actual_start_date;\r\n      const actualEnd = gantt.getTask(gantt.getState().selected_task).actual_end_date;\r\n      \r\n      const planStartPercentage = Math.floor((date - planStart) / (planEnd - planStart) * 100);\r\n      const planEndPercentage = Math.floor((date - planEnd) / (planEnd - planStart) * 100);\r\n      const actualStartPercentage = Math.floor((date - actualStart) / (actualEnd - actualStart) * 100);\r\n      const actualEndPercentage = Math.floor((date - actualEnd) / (actualEnd - actualStart) * 100);\r\n      \r\n      let html = '';\r\n      \r\n      if (planStart && planEnd) {\r\n        html += '<div class=\"gantt-progress-bar\">';\r\n        html += '<div class=\"plan-start-bar\" style=\"width: ' + planStartPercentage + '%;\"></div>';\r\n        html += '<div class=\"plan-end-bar\" style=\"width: ' + planEndPercentage + '%;\"></div>';\r\n        html += '</div>';\r\n      }\r\n      \r\n      if (actualStart && actualEnd) {\r\n        html += '<div class=\"gantt-progress-bar\">';\r\n        html += '<div class=\"actual-start-bar\" style=\"width: ' + actualStartPercentage + '%;\"></div>';\r\n        html += '<div class=\"actual-end-bar\" style=\"width: ' + actualEndPercentage + '%;\"></div>';\r\n        html += '</div>';\r\n      }\r\n      \r\n      return html;\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.gantt-container-right {\r\n  width: 60%;\r\n  height: 100%;\r\n  float: left;\r\n  overflow-y: auto;\r\n}\r\n.gantt-bar-label {\r\n  width: 100px;\r\n  height: 50px;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  padding: 2px;\r\n  background-color: #007bff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.long {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.short {\r\n  background-color: #28a745;\r\n}\r\n</style>"],"mappings":"AAMA;AACA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAD,IAAA,GACA;UACAE,EAAA;UACAC,KAAA;UACAC,IAAA;UACAC,UAAA;UACAC,QAAA;UACAC,QAAA;UACAC,UAAA;UACAC,IAAA;UACAC,MAAA;QACA,GACA;UACAR,EAAA;UACAC,KAAA;UACAC,IAAA;UACAC,UAAA;UACAC,QAAA;UACAC,QAAA;UACAC,UAAA;UACAC,IAAA;UACAE,MAAA;UACAD,MAAA;QACA;MAEA;IACA;EACA;EACAE,QAAA;IACA,MAAAC,cAAA,GAAAC,QAAA,CAAAC,aAAA;IACAjB,KAAA,CAAAkB,IAAA,CAAAH,cAAA;IAEAf,KAAA,CAAAmB,SAAA,CAAAC,eAAA,aAAAC,IAAA,EAAAC,KAAA,EAAAC,IAAA;MACA,MAAAC,SAAA,GAAAxB,KAAA,CAAAyB,OAAA,CAAAzB,KAAA,CAAA0B,QAAA,GAAAC,aAAA,EAAApB,UAAA;MACA,MAAAqB,OAAA,GAAA5B,KAAA,CAAAyB,OAAA,CAAAzB,KAAA,CAAA0B,QAAA,GAAAC,aAAA,EAAAnB,QAAA;MACA,MAAAqB,WAAA,GAAA7B,KAAA,CAAAyB,OAAA,CAAAzB,KAAA,CAAA0B,QAAA,GAAAC,aAAA,EAAAG,iBAAA;MACA,MAAAC,SAAA,GAAA/B,KAAA,CAAAyB,OAAA,CAAAzB,KAAA,CAAA0B,QAAA,GAAAC,aAAA,EAAAK,eAAA;MAEA,MAAAC,mBAAA,GAAAC,IAAA,CAAAC,KAAA,EAAAd,IAAA,GAAAG,SAAA,KAAAI,OAAA,GAAAJ,SAAA;MACA,MAAAY,iBAAA,GAAAF,IAAA,CAAAC,KAAA,EAAAd,IAAA,GAAAO,OAAA,KAAAA,OAAA,GAAAJ,SAAA;MACA,MAAAa,qBAAA,GAAAH,IAAA,CAAAC,KAAA,EAAAd,IAAA,GAAAQ,WAAA,KAAAE,SAAA,GAAAF,WAAA;MACA,MAAAS,mBAAA,GAAAJ,IAAA,CAAAC,KAAA,EAAAd,IAAA,GAAAU,SAAA,KAAAA,SAAA,GAAAF,WAAA;MAEA,IAAAU,IAAA;MAEA,IAAAf,SAAA,IAAAI,OAAA;QACAW,IAAA;QACAA,IAAA,mDAAAN,mBAAA;QACAM,IAAA,iDAAAH,iBAAA;QACAG,IAAA;MACA;MAEA,IAAAV,WAAA,IAAAE,SAAA;QACAQ,IAAA;QACAA,IAAA,qDAAAF,qBAAA;QACAE,IAAA,mDAAAD,mBAAA;QACAC,IAAA;MACA;MAEA,OAAAA,IAAA;IACA;EACA;EACAC,OAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}