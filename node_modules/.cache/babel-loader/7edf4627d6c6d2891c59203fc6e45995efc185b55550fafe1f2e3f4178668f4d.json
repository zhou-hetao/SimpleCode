{"ast":null,"code":"import { getUserCode, userLogin } from \"@/api/user/index\";\nimport { Message } from \"element-ui\";\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      formData: {\n        username: \"admin\",\n        password: 123456,\n        Verificationcode: undefined\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        Verificationcode: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      percentage: \"65%\",\n      countdown: 0,\n      buttonText: \"获取验证码\",\n      code: 0 //获取的验证码\n    };\n  },\n\n  computed: {},\n  methods: {\n    ...mapActions(['login']),\n    submitForm() {\n      this.$refs['elForm'].validate(valid => {\n        if (!valid) return;\n        // TODO 提交表单'\n        if (this.formData.Verificationcode == this.code) {\n          const respone = this.login(this.formData);\n          console.log(respone);\n        } else {\n          Message({\n            message: '验证码错误',\n            type: \"error\",\n            duration: 3000\n          });\n        }\n      });\n    },\n    //提交校验\n    resetForm() {\n      this.$refs['elForm'].resetFields();\n    },\n    //获取验证码\n    getCode() {\n      if (this.countdown == 0) {\n        getUserCode().then(res => {\n          console.log(res);\n          if (res.code == 200) {\n            this.code = res.data;\n          }\n          this.startCountdown();\n        });\n      } else {\n        Message({\n          message: this.buttonText,\n          type: \"error\",\n          duration: 3000\n        });\n      }\n    },\n    //按钮倒计时\n    startCountdown() {\n      if (this.countdown > 0) {\n        return;\n      }\n      this.countdown = 60;\n      this.buttonText = `${this.countdown} 秒后获取`;\n      this.percentage = '63%';\n      const intervalId = setInterval(() => {\n        this.countdown--;\n        this.buttonText = `${this.countdown} 秒后获取`;\n        this.percentage = '63%';\n        if (this.countdown === 0) {\n          clearInterval(intervalId);\n          this.buttonText = '获取验证码';\n          this.percentage = '65%';\n        }\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"names":["getUserCode","userLogin","Message","mapActions","data","formData","username","password","Verificationcode","undefined","rules","required","message","trigger","percentage","countdown","buttonText","code","computed","methods","submitForm","$refs","validate","valid","respone","login","console","log","type","duration","resetForm","resetFields","getCode","then","res","startCountdown","intervalId","setInterval","clearInterval"],"sources":["src/views/Login/Login.vue"],"sourcesContent":["<template>\r\n    <div id=\"login\">\r\n        <div class=\"login-from-box\">\r\n            <h2>登录</h2>\r\n            <el-form ref=\"elForm\" :model=\"formData\" :rules=\"rules\" size=\"medium\" label-width=\"75px\" label-position=\"left\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"formData.username\" placeholder=\"请输入用户名\" clearable prefix-icon='el-icon-user-solid'>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"formData.password\" placeholder=\"请输入密码\" clearable prefix-icon='el-icon-info'\r\n                        show-password :style=\"{ width: '100%' }\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"验证码\" prop=\"Verificationcode\">\r\n                    <el-input v-model=\"formData.Verificationcode\" placeholder=\"请输入验证码\" clearable\r\n                        prefix-icon='el-icon-loading' :style=\"{ width: percentage }\"></el-input>\r\n                    <el-button @click=\"getCode\">{{ buttonText }}</el-button>\r\n                </el-form-item>\r\n                <el-form-item size=\"large\" style=\"margin-left: -80px;\">\r\n                    <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n                    <el-button @click=\"resetForm\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { getUserCode, userLogin } from \"@/api/user/index\"\r\nimport { Message } from \"element-ui\"\r\nimport { mapActions } from 'vuex'\r\nexport default {\r\n    data() {\r\n        return {\r\n            formData: {\r\n                username: \"admin\",\r\n                password: 123456,\r\n                Verificationcode: undefined,\r\n            },\r\n            rules: {\r\n                username: [{\r\n                    required: true,\r\n                    message: '请输入用户名',\r\n                    trigger: 'blur'\r\n                }],\r\n                password: [{\r\n                    required: true,\r\n                    message: '请输入密码',\r\n                    trigger: 'blur'\r\n                }],\r\n                Verificationcode: [{\r\n                    required: true,\r\n                    message: '请输入验证码',\r\n                    trigger: 'blur'\r\n                }],\r\n            },\r\n            percentage: \"65%\",\r\n            countdown: 0,\r\n            buttonText: \"获取验证码\",\r\n            code: 0,//获取的验证码\r\n        }\r\n    },\r\n    computed: {\r\n      \r\n  },\r\n    methods: {\r\n        ...mapActions(['login']),\r\n        submitForm() {\r\n            this.$refs['elForm'].validate(valid => {\r\n                if (!valid) return\r\n                // TODO 提交表单'\r\n                if (this.formData.Verificationcode == this.code) {\r\n                    const respone= this.login(this.formData)\r\n                    console.log(respone);\r\n                  \r\n                } else {\r\n                    Message({\r\n                        message: '验证码错误',\r\n                        type: \"error\",\r\n                        duration: 3000,\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        //提交校验\r\n        resetForm() {\r\n            this.$refs['elForm'].resetFields()\r\n        },\r\n        //获取验证码\r\n        getCode() {\r\n            if (this.countdown == 0) {\r\n                getUserCode().then((res) => {\r\n                    console.log(res);\r\n                    if (res.code == 200) {\r\n                        this.code = res.data\r\n                    }\r\n                    this.startCountdown()\r\n                })\r\n            } else {\r\n                Message({\r\n                    message: this.buttonText,\r\n                    type: \"error\",\r\n                    duration: 3000,\r\n                })\r\n            }\r\n\r\n        },\r\n        //按钮倒计时\r\n        startCountdown() {\r\n            if (this.countdown > 0) {\r\n                return\r\n            }\r\n\r\n            this.countdown = 60\r\n            this.buttonText = `${this.countdown} 秒后获取`\r\n            this.percentage = '63%'\r\n            const intervalId = setInterval(() => {\r\n                this.countdown--\r\n                this.buttonText = `${this.countdown} 秒后获取`\r\n                this.percentage = '63%'\r\n                if (this.countdown === 0) {\r\n                    clearInterval(intervalId)\r\n                    this.buttonText = '获取验证码'\r\n                    this.percentage = '65%'\r\n                }\r\n            }, 1000)\r\n        },\r\n       \r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#login {\r\n    width: 100%;\r\n    height: 100vh;\r\n    text-align: center;\r\n    background-color: rgb(245, 245, 245);\r\n    position: relative;\r\n    background-image: url(@/assets/bk.png);\r\n    background-size: 100% 100%;\r\n    background-repeat: repeat;\r\n\r\n    .login-from-box {\r\n        width: 400px;\r\n        height: 315px;\r\n        margin: 0 auto;\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin-top: -200px;\r\n        margin-left: -250px;\r\n        background-color: white;\r\n        padding: 50px 50px 50px 50px;\r\n        border-radius: 30px;\r\n\r\n    }\r\n}\r\n</style>"],"mappings":"AA4BA,SAAAA,WAAA,EAAAC,SAAA;AACA,SAAAC,OAAA;AACA,SAAAC,UAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,gBAAA,EAAAC;MACA;MACAC,KAAA;QACAJ,QAAA;UACAK,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;QACAN,QAAA;UACAI,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;QACAL,gBAAA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MACA;MACAC,UAAA;MACAC,SAAA;MACAC,UAAA;MACAC,IAAA;IACA;EACA;;EACAC,QAAA,GAEA;EACAC,OAAA;IACA,GAAAhB,UAAA;IACAiB,WAAA;MACA,KAAAC,KAAA,WAAAC,QAAA,CAAAC,KAAA;QACA,KAAAA,KAAA;QACA;QACA,SAAAlB,QAAA,CAAAG,gBAAA,SAAAS,IAAA;UACA,MAAAO,OAAA,QAAAC,KAAA,MAAApB,QAAA;UACAqB,OAAA,CAAAC,GAAA,CAAAH,OAAA;QAEA;UACAtB,OAAA;YACAU,OAAA;YACAgB,IAAA;YACAC,QAAA;UACA;QACA;MACA;IACA;IACA;IACAC,UAAA;MACA,KAAAT,KAAA,WAAAU,WAAA;IACA;IACA;IACAC,QAAA;MACA,SAAAjB,SAAA;QACAf,WAAA,GAAAiC,IAAA,CAAAC,GAAA;UACAR,OAAA,CAAAC,GAAA,CAAAO,GAAA;UACA,IAAAA,GAAA,CAAAjB,IAAA;YACA,KAAAA,IAAA,GAAAiB,GAAA,CAAA9B,IAAA;UACA;UACA,KAAA+B,cAAA;QACA;MACA;QACAjC,OAAA;UACAU,OAAA,OAAAI,UAAA;UACAY,IAAA;UACAC,QAAA;QACA;MACA;IAEA;IACA;IACAM,eAAA;MACA,SAAApB,SAAA;QACA;MACA;MAEA,KAAAA,SAAA;MACA,KAAAC,UAAA,WAAAD,SAAA;MACA,KAAAD,UAAA;MACA,MAAAsB,UAAA,GAAAC,WAAA;QACA,KAAAtB,SAAA;QACA,KAAAC,UAAA,WAAAD,SAAA;QACA,KAAAD,UAAA;QACA,SAAAC,SAAA;UACAuB,aAAA,CAAAF,UAAA;UACA,KAAApB,UAAA;UACA,KAAAF,UAAA;QACA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}