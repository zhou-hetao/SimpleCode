{"ast":null,"code":"import gantt from 'dhtmlx-gantt'; // 引入模块\n//import 'dhtmlx-gantt/codebase/dhtmlxgantt.css'\nimport 'dhtmlx-gantt/codebase/skins/dhtmlxgantt_terrace.css'; //皮肤\nimport 'dhtmlx-gantt/codebase/locale/locale_cn'; // 本地化\nimport 'dhtmlx-gantt/codebase/ext/dhtmlxgantt_tooltip.js'; //任务条悬浮提示\n\nexport default {\n  name: 'Gantt',\n  data() {\n    return {\n      tasks: {\n        data: []\n      }\n    };\n  },\n  mounted() {\n    this.initData();\n    /*\r\n     * 冒烟：fcca02    单元：fec0dc     回归：62ddd4   阶段：d1a6ff\r\n     * */\n    //设置图表区域的日期坐标最大值 var date = new Date(dateString.replace(/-/,\"/\"))\n    //  gantt.config.start_date = new Date(\"2020-04-08\".replace(/-/,\"/\")) ;\n    //gantt.config.end_date = new Date(\"2020-04-18\".replace(/-/,\"/\")) ; //结束时间需要+1天\n\n    //自适应甘特图的尺寸大小, 使得在不出现滚动条的情况下, 显示全部任务\n    gantt.config.autosize = true;\n    //只读模式\n    gantt.config.readonly = true;\n    //是否显示左侧树表格\n    gantt.config.show_grid = false;\n    //表格列设置\n    gantt.config.columns = [{\n      name: 'text',\n      label: '阶段名字',\n      tree: true,\n      width: '120'\n    }, {\n      name: 'duration',\n      label: '时长',\n      align: 'center',\n      template: function (obj) {\n        return obj.duration + '天';\n      }\n    }\n    /*{name:\"start_date\", label:\"开始时间\", align: \"center\" },\r\n      {name:\"end_date\",   label:\"结束时间\",   align: \"center\" },*/];\n    //时间轴图表中，如果不设置，只有行边框，区分上下的任务，设置之后带有列的边框，整个时间轴变成格子状。\n    gantt.config.show_task_cells = true;\n\n    //设置x轴日期\n    gantt.config.scale_unit = 'day';\n    gantt.config.step = 1;\n    gantt.config.date_scale = '星期' + '%D';\n\n    //当task的长度改变时，自动调整图表坐标轴区间用于适配task的长度\n    gantt.config.fit_tasks = true;\n    // 在时间线上增加一行显示星期\n    gantt.config.subscales = [\n    //{unit:\"day\",  step:1, date:\"星期\"+\"%D\" },\n    {\n      unit: 'day',\n      step: 1,\n      date: '%M' + '%d' + '日'\n    }];\n    //时间轴图表中，任务条形图的高度\n    gantt.config.task_height = 28;\n    //时间轴图表中，甘特图的高度\n    gantt.config.row_height = 36;\n    //从后端过来的数据格式化\n    gantt.config.xml_date = '%Y-%m-%d';\n    //任务条显示内容\n    gantt.templates.task_text = function (start, end, task) {\n      return task.text + '(' + task.duration + '天)';\n    };\n    // gantt.templates.task_class = function(start, end, task){return \"xx\";};\n    //悬浮\n    gantt.templates.tooltip_text = function (start, end, task) {\n      //return \"<b>任务名称:</b> \"+task.text+\"<br/><b>时长:</b> \" + task.duration+\"<br/><b>说明:</b>\" +task.toolTipsTxt;\n      return \"<span style='font-size: 14px'>\" + task.toolTipsTxt + '</span>';\n    };\n    gantt.templates.scale_cell_class = function (date) {\n      /*if(date.getDay()== 0 || date.getDay()== 6){\r\n        return \"weekend\";\r\n      }*/\n      return 'weekend';\n    };\n    //任务栏周末亮色\n    /*gantt.templates.task_cell_class = function(item,date){\r\n      if(date.getDay()== 0 || date.getDay()== 6){\r\n        return \"weekend\";\r\n      }\r\n    };*/\n    //任务条上的文字大小 以及取消border自带样式\n    gantt.templates.task_class = function (start, end, item) {\n      return item.$level == 0 ? 'firstLevelTask' : 'secondLevelTask';\n    };\n    // 初始化\n    gantt.init(this.$refs.gantt);\n    // 数据解析\n    gantt.parse(this.tasks);\n  },\n  methods: {\n    //开始时间-结束时间参数\n    DateDifference: function (strDateStart, strDateEnd) {\n      var begintime_ms = Date.parse(new Date(strDateStart.replace(/-/g, '/'))); //begintime 为开始时间\n      var endtime_ms = Date.parse(new Date(strDateEnd.replace(/-/g, '/'))); // endtime 为结束时间\n      var date3 = endtime_ms - begintime_ms; //时间差的毫秒数\n      var days = Math.floor(date3 / (24 * 3600 * 1000));\n      return days;\n    },\n    initData: function () {\n      this.tasks.data = [{\n        id: 1,\n        text: '计划时间',\n        start_date: '2020-04-08',\n        duration: 10,\n        open: true,\n        //默认打开，\n        toolTipsTxt: 'xxxxxxxxxxxxxxxxx'\n      }, {\n        toolTipsTxt: 'xxxxxxxxxxxxxxxxx父任务01-001',\n        text: '冒烟阶段',\n        // 任务名\n        start_date: '2020-04-08',\n        // 开始时间\n        id: 11,\n        // 任务id\n        duration: 3,\n        // 任务时长，从start_date开始计算\n        parent: 1,\n        // 父任务ID\n        type: 1\n      }, {\n        toolTipsTxt: '',\n        text: '单元测试',\n        // 任务名\n        start_date: '2020-04-11',\n        // 开始时间\n        id: 12,\n        // 任务id\n        duration: 2,\n        // 任务时长，从start_date开始计算\n        parent: 1,\n        // 父任务ID\n        type: 2\n      }, {\n        toolTipsTxt: '',\n        text: '回归测试',\n        // 任务名\n        start_date: '2020-04-13',\n        // 开始时间\n        id: 13,\n        // 任务id\n        duration: 4,\n        // 任务时长，从start_date开始计算\n        parent: 1,\n        // 父任务ID\n        type: 3\n      }, {\n        toolTipsTxt: '',\n        text: '阶段四',\n        // 任务名\n        start_date: '2020-04-13',\n        // 开始时间\n        id: 14,\n        // 任务id\n        duration: 4,\n        // 任务时长，从start_date开始计算\n        parent: 1,\n        // 父任务ID\n        type: 4\n      },\n      //========================\n      {\n        id: 2,\n        text: '实际时间',\n        start_date: '2020-04-08',\n        duration: 8,\n        open: true,\n        //默认打开，才可隐藏左侧表格\n        toolTipsTxt: 'xxxxxxxxxxxxxxxxx',\n        state: 'default'\n        // color:\"#409EFF\",\n        //progress: 0.6\n      }, {\n        toolTipsTxt: 'xxxxxxxxxxxxxxxxx父任务01-001',\n        text: '冒烟阶段',\n        // 任务名\n        start_date: '2020-04-08',\n        // 开始时间\n        id: 21,\n        // 任务id\n        duration: 2,\n        // 任务时长，从start_date开始计算\n        parent: 2,\n        // 父任务ID\n        type: 1\n      }, {\n        toolTipsTxt: '',\n        text: '单元测试',\n        // 任务名\n        start_date: '2020-04-09',\n        // 开始时间\n        id: 22,\n        // 任务id\n        duration: 2,\n        // 任务时长，从start_date开始计算\n        parent: 2,\n        // 父任务ID\n        type: 2\n      }, {\n        toolTipsTxt: '',\n        text: '回归测试',\n        // 任务名\n        start_date: '2020-04-11',\n        // 开始时间\n        id: 23,\n        // 任务id\n        duration: 2,\n        // 任务时长，从start_date开始计算\n        parent: 2,\n        // 父任务ID\n        type: 3\n      }].map(function (current, ind, arry) {\n        var newObj = {};\n        if (current.type) {\n          //存在type字段 说明非一级菜单，判断阶段的具体类型 设置不同颜色\n          if (current.type == 1) {\n            //冒烟\n            newObj = Object.assign({}, current, {\n              color: '#fcca02'\n            });\n          } else if (current.type == 2) {\n            //单元\n            newObj = Object.assign({}, current, {\n              color: '#fec0dc'\n            });\n          } else if (current.type == 3) {\n            //回归\n            newObj = Object.assign({}, current, {\n              color: '#62ddd4'\n            });\n          } else if (current.type == 4) {\n            newObj = Object.assign({}, current, {\n              color: '#d1a6ff'\n            });\n          }\n        } else {\n          //一级菜单是蓝色的\n          newObj = Object.assign({}, current, {\n            color: '#5692f0'\n          });\n        }\n        return newObj;\n      });\n    }\n  }\n};","map":{"version":3,"names":["gantt","name","data","tasks","mounted","initData","config","autosize","readonly","show_grid","columns","label","tree","width","align","template","obj","duration","show_task_cells","scale_unit","step","date_scale","fit_tasks","subscales","unit","date","task_height","row_height","xml_date","templates","task_text","start","end","task","text","tooltip_text","toolTipsTxt","scale_cell_class","task_class","item","$level","init","$refs","parse","methods","DateDifference","strDateStart","strDateEnd","begintime_ms","Date","replace","endtime_ms","date3","days","Math","floor","id","start_date","open","parent","type","state","map","current","ind","arry","newObj","Object","assign","color"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div ref=\"gantt\" class=\"left-container\" />\r\n  </div>\r\n</template>\r\n<script>\r\n  import gantt from 'dhtmlx-gantt' // 引入模块\r\n  //import 'dhtmlx-gantt/codebase/dhtmlxgantt.css'\r\n  import 'dhtmlx-gantt/codebase/skins/dhtmlxgantt_terrace.css' //皮肤\r\n  import 'dhtmlx-gantt/codebase/locale/locale_cn' // 本地化\r\n  import 'dhtmlx-gantt/codebase/ext/dhtmlxgantt_tooltip.js' //任务条悬浮提示\r\n\r\n  export default {\r\n    name: 'Gantt',\r\n    data() {\r\n      return {\r\n        tasks: {\r\n          data: [],\r\n        },\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initData()\r\n      /*\r\n       * 冒烟：fcca02    单元：fec0dc     回归：62ddd4   阶段：d1a6ff\r\n       * */\r\n      //设置图表区域的日期坐标最大值 var date = new Date(dateString.replace(/-/,\"/\"))\r\n      //  gantt.config.start_date = new Date(\"2020-04-08\".replace(/-/,\"/\")) ;\r\n      //gantt.config.end_date = new Date(\"2020-04-18\".replace(/-/,\"/\")) ; //结束时间需要+1天\r\n\r\n      //自适应甘特图的尺寸大小, 使得在不出现滚动条的情况下, 显示全部任务\r\n      gantt.config.autosize = true\r\n      //只读模式\r\n      gantt.config.readonly = true\r\n      //是否显示左侧树表格\r\n      gantt.config.show_grid = false\r\n      //表格列设置\r\n      gantt.config.columns = [\r\n        { name: 'text', label: '阶段名字', tree: true, width: '120' },\r\n        {\r\n          name: 'duration',\r\n          label: '时长',\r\n          align: 'center',\r\n          template: function(obj) {\r\n            return obj.duration + '天'\r\n          },\r\n        },\r\n        /*{name:\"start_date\", label:\"开始时间\", align: \"center\" },\r\n\r\n        {name:\"end_date\",   label:\"结束时间\",   align: \"center\" },*/\r\n      ]\r\n      //时间轴图表中，如果不设置，只有行边框，区分上下的任务，设置之后带有列的边框，整个时间轴变成格子状。\r\n      gantt.config.show_task_cells = true\r\n\r\n      //设置x轴日期\r\n      gantt.config.scale_unit = 'day'\r\n      gantt.config.step = 1\r\n      gantt.config.date_scale = '星期' + '%D'\r\n\r\n      //当task的长度改变时，自动调整图表坐标轴区间用于适配task的长度\r\n      gantt.config.fit_tasks = true\r\n      // 在时间线上增加一行显示星期\r\n      gantt.config.subscales = [\r\n        //{unit:\"day\",  step:1, date:\"星期\"+\"%D\" },\r\n        { unit: 'day', step: 1, date: '%M' + '%d' + '日' },\r\n      ]\r\n      //时间轴图表中，任务条形图的高度\r\n      gantt.config.task_height = 28\r\n      //时间轴图表中，甘特图的高度\r\n      gantt.config.row_height = 36\r\n      //从后端过来的数据格式化\r\n      gantt.config.xml_date = '%Y-%m-%d'\r\n      //任务条显示内容\r\n      gantt.templates.task_text = function(start, end, task) {\r\n        return task.text + '(' + task.duration + '天)'\r\n      }\r\n      // gantt.templates.task_class = function(start, end, task){return \"xx\";};\r\n      //悬浮\r\n      gantt.templates.tooltip_text = function(start, end, task) {\r\n        //return \"<b>任务名称:</b> \"+task.text+\"<br/><b>时长:</b> \" + task.duration+\"<br/><b>说明:</b>\" +task.toolTipsTxt;\r\n        return \"<span style='font-size: 14px'>\" + task.toolTipsTxt + '</span>'\r\n      }\r\n\r\n      gantt.templates.scale_cell_class = function(date) {\r\n        /*if(date.getDay()== 0 || date.getDay()== 6){\r\n          return \"weekend\";\r\n        }*/\r\n        return 'weekend'\r\n      }\r\n      //任务栏周末亮色\r\n      /*gantt.templates.task_cell_class = function(item,date){\r\n        if(date.getDay()== 0 || date.getDay()== 6){\r\n          return \"weekend\";\r\n        }\r\n      };*/\r\n      //任务条上的文字大小 以及取消border自带样式\r\n      gantt.templates.task_class = function(start, end, item) {\r\n        return item.$level == 0 ? 'firstLevelTask' : 'secondLevelTask'\r\n      }\r\n      // 初始化\r\n      gantt.init(this.$refs.gantt)\r\n      // 数据解析\r\n      gantt.parse(this.tasks)\r\n    },\r\n    methods: {\r\n      //开始时间-结束时间参数\r\n      DateDifference: function(strDateStart, strDateEnd) {\r\n        var begintime_ms = Date.parse(new Date(strDateStart.replace(/-/g, '/'))) //begintime 为开始时间\r\n        var endtime_ms = Date.parse(new Date(strDateEnd.replace(/-/g, '/'))) // endtime 为结束时间\r\n        var date3 = endtime_ms - begintime_ms //时间差的毫秒数\r\n        var days = Math.floor(date3 / (24 * 3600 * 1000))\r\n        return days\r\n      },\r\n      initData: function() {\r\n        this.tasks.data = [\r\n          {\r\n            id: 1,\r\n            text: '计划时间',\r\n            start_date: '2020-04-08',\r\n            duration: 10,\r\n            open: true, //默认打开，\r\n            toolTipsTxt: 'xxxxxxxxxxxxxxxxx',\r\n          },\r\n          {\r\n            toolTipsTxt: 'xxxxxxxxxxxxxxxxx父任务01-001',\r\n            text: '冒烟阶段', // 任务名\r\n            start_date: '2020-04-08', // 开始时间\r\n            id: 11, // 任务id\r\n            duration: 3, // 任务时长，从start_date开始计算\r\n            parent: 1, // 父任务ID\r\n            type: 1,\r\n          },\r\n          {\r\n            toolTipsTxt: '',\r\n            text: '单元测试', // 任务名\r\n            start_date: '2020-04-11', // 开始时间\r\n            id: 12, // 任务id\r\n            duration: 2, // 任务时长，从start_date开始计算\r\n            parent: 1, // 父任务ID\r\n            type: 2,\r\n          },\r\n          {\r\n            toolTipsTxt: '',\r\n            text: '回归测试', // 任务名\r\n            start_date: '2020-04-13', // 开始时间\r\n            id: 13, // 任务id\r\n            duration: 4, // 任务时长，从start_date开始计算\r\n            parent: 1, // 父任务ID\r\n            type: 3,\r\n          },\r\n          {\r\n            toolTipsTxt: '',\r\n            text: '阶段四', // 任务名\r\n            start_date: '2020-04-13', // 开始时间\r\n            id: 14, // 任务id\r\n            duration: 4, // 任务时长，从start_date开始计算\r\n            parent: 1, // 父任务ID\r\n            type: 4,\r\n          },\r\n          //========================\r\n          {\r\n            id: 2,\r\n            text: '实际时间',\r\n            start_date: '2020-04-08',\r\n            duration: 8,\r\n            open: true, //默认打开，才可隐藏左侧表格\r\n            toolTipsTxt: 'xxxxxxxxxxxxxxxxx',\r\n            state: 'default',\r\n            // color:\"#409EFF\",\r\n            //progress: 0.6\r\n          },\r\n          {\r\n            toolTipsTxt: 'xxxxxxxxxxxxxxxxx父任务01-001',\r\n            text: '冒烟阶段', // 任务名\r\n            start_date: '2020-04-08', // 开始时间\r\n            id: 21, // 任务id\r\n            duration: 2, // 任务时长，从start_date开始计算\r\n            parent: 2, // 父任务ID\r\n            type: 1,\r\n          },\r\n          {\r\n            toolTipsTxt: '',\r\n            text: '单元测试', // 任务名\r\n            start_date: '2020-04-09', // 开始时间\r\n            id: 22, // 任务id\r\n            duration: 2, // 任务时长，从start_date开始计算\r\n            parent: 2, // 父任务ID\r\n            type: 2,\r\n          },\r\n          {\r\n            toolTipsTxt: '',\r\n            text: '回归测试', // 任务名\r\n            start_date: '2020-04-11', // 开始时间\r\n            id: 23, // 任务id\r\n            duration: 2, // 任务时长，从start_date开始计算\r\n            parent: 2, // 父任务ID\r\n            type: 3,\r\n          },\r\n        ].map(function(current, ind, arry) {\r\n          var newObj = {}\r\n          if (current.type) {\r\n            //存在type字段 说明非一级菜单，判断阶段的具体类型 设置不同颜色\r\n            if (current.type == 1) {\r\n              //冒烟\r\n              newObj = Object.assign({}, current, { color: '#fcca02' })\r\n            } else if (current.type == 2) {\r\n              //单元\r\n              newObj = Object.assign({}, current, { color: '#fec0dc' })\r\n            } else if (current.type == 3) {\r\n              //回归\r\n              newObj = Object.assign({}, current, { color: '#62ddd4' })\r\n            } else if (current.type == 4) {\r\n              newObj = Object.assign({}, current, { color: '#d1a6ff' })\r\n            }\r\n          } else {\r\n            //一级菜单是蓝色的\r\n            newObj = Object.assign({}, current, { color: '#5692f0' })\r\n          }\r\n\r\n          return newObj\r\n        })\r\n      },\r\n    },\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n  .firstLevelTask {\r\n    border: none;\r\n    .gantt_task_content {\r\n      // font-weight: bold;\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  .secondLevelTask {\r\n    border: none;\r\n  }\r\n\r\n  .thirdLevelTask {\r\n    border: 2px solid #da645d;\r\n    color: #da645d;\r\n    background: #da645d;\r\n  }\r\n\r\n  .milestone-default {\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.45);\r\n  }\r\n\r\n  .milestone-unfinished {\r\n    border: none;\r\n    background: #5692f0;\r\n  }\r\n\r\n  .milestone-finished {\r\n    border: none;\r\n    background: #84bd54;\r\n  }\r\n\r\n  .milestone-canceled {\r\n    border: none;\r\n    background: #da645d;\r\n  }\r\n\r\n  html,\r\n  body {\r\n    margin: 0px;\r\n    padding: 0px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .container {\r\n    height: 900px;\r\n    .left-container {\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .left-container {\r\n    height: 600px;\r\n  }\r\n\r\n  .gantt_scale_line {\r\n    border-top: 0;\r\n  }\r\n\r\n  .weekend {\r\n    //background:#f4f7f4!important;\r\n    color: #000000 !important;\r\n  }\r\n\r\n  .gantt_selected .weekend {\r\n    background: #f7eb91 !important;\r\n  }\r\n\r\n  .gantt_task_content {\r\n    text-align: left;\r\n    padding-left: 10px;\r\n  }\r\n\r\n  //上面任务条样式\r\n  .gantt_task_scale {\r\n    height: 45px !important;\r\n  }\r\n\r\n  .gantt_task .gantt_task_scale .gantt_scale_cell {\r\n    line-height: 30px !important;\r\n    height: 28px !important;\r\n  }\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}