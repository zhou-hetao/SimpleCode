{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { gantt } from 'dhtmlx-gantt';\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nexport default {\n  name: 'gantt',\n  data() {\n    return {\n      tasks: {\n        data: []\n      },\n      options: [{\n        value: '1',\n        label: '全部'\n      }, {\n        value: '2',\n        label: '完成'\n      }, {\n        value: '3',\n        label: '正常'\n      }, {\n        value: '4',\n        label: '异常'\n      }, {\n        value: '5',\n        label: '未启动'\n      }],\n      value: '1'\n    };\n  },\n  methods: {\n    //开始时间-结束时间参数\n    DateDifference: function (strDateStart, strDateEnd) {\n      var begintime_ms = Date.parse(new Date(strDateStart.replace(/-/g, '/'))); //begintime 为开始时间\n      var endtime_ms = Date.parse(new Date(strDateEnd.replace(/-/g, '/'))); // endtime 为结束时间\n      var date3 = endtime_ms - begintime_ms; //时间差的毫秒数\n      var days = Math.floor(date3 / (24 * 3600 * 1000));\n      return days;\n    },\n    initData: function () {\n      this.tasks.data = [{\n        id: 1,\n        text: '概念设计',\n        start_date: '2020-04-08',\n        duration: 10,\n        open: true,\n        //默认打开，\n        toolTipsTxt: 'xxx项目概念设计',\n        progress: 0.6,\n        status: \"parent\"\n      }, {\n        toolTipsTxt: 'xxx项目-项目启动会',\n        text: '项目启动会-外部',\n        // 任务名\n        start_date: '2020-04-08',\n        // 开始时间\n        id: 11,\n        // 任务id\n        duration: 3,\n        // 任务时长，从start_date开始计算\n        parent: 1,\n        // 父任务ID\n        type: 1,\n        progress: 0.5,\n        status: \"yellow\"\n      }, {\n        toolTipsTxt: 'xxx项目-项目启动会议',\n        text: '项目启动会-内部',\n        start_date: '2020-04-11',\n        id: 12,\n        duration: 2,\n        parent: 1,\n        type: 2,\n        progress: 0.6,\n        status: \"pink\"\n      }, {\n        toolTipsTxt: 'xxx项目开工会',\n        text: '项目开工会',\n        start_date: '2020-04-13',\n        id: 13,\n        duration: 4,\n        parent: 1,\n        type: 3,\n        progress: 1,\n        status: \"green\"\n      }, {\n        toolTipsTxt: 'xxx项目-项目分析',\n        text: '项目分析',\n        start_date: '2020-04-13',\n        id: 14,\n        duration: 4,\n        parent: 1,\n        type: 4,\n        progress: 0.6,\n        status: \"popular\"\n      }, {\n        id: 2,\n        text: '方案设计',\n        start_date: '2020-04-08',\n        duration: 8,\n        open: true,\n        toolTipsTxt: 'xxx方案设计',\n        state: 'default',\n        // color:\"#409EFF\", //设置颜色\n        progress: 0.6,\n        status: \"parent\"\n      }, {\n        toolTipsTxt: 'xxx新项目原型图设计',\n        text: '原型图设计',\n        start_date: '2020-04-08',\n        id: 21,\n        duration: 2,\n        parent: 2,\n        type: 1,\n        progress: 0.6,\n        status: \"yellow\"\n      }, {\n        toolTipsTxt: 'xxx项目-项目设计图',\n        text: '设计图设计',\n        start_date: '2020-04-09',\n        id: 22,\n        duration: 2,\n        parent: 2,\n        type: 2,\n        progress: 0.6,\n        status: \"pink\"\n      }, {\n        toolTipsTxt: 'xxx项目-项目确认',\n        text: '项目确认',\n        start_date: '2020-04-11',\n        id: 23,\n        duration: 2,\n        parent: 2,\n        type: 3,\n        progress: 1,\n        status: \"green\"\n      }].map(function (current, ind, arry) {\n        var newObj = {};\n        if (current.type) {\n          //存在type字段 说明非一级菜单，判断阶段的具体类型 设置不同颜色\n          if (current.type == 1) {\n            //冒烟\n            newObj = Object.assign({}, current, {\n              'color': '#fcca02'\n            });\n          } else if (current.type == 2) {\n            //单元\n            newObj = Object.assign({}, current, {\n              'color': '#fec0dc'\n            });\n          } else if (current.type == 3) {\n            //回归\n            newObj = Object.assign({}, current, {\n              'color': '#62ddd4'\n            });\n          } else if (current.type == 4) {\n            newObj = Object.assign({}, current, {\n              'color': '#d1a6ff'\n            });\n          }\n        } else {\n          //一级菜单是蓝色的\n          newObj = Object.assign({}, current, {\n            'color': '#5692f0'\n          });\n        }\n        return newObj;\n      });\n    },\n    selectChange(val) {\n      console.log(val);\n\n      //测试用例\n      var obj = {\n        toolTipsTxt: '新增任务',\n        text: '新增任务',\n        // 任务名\n        start_date: '2020-04-15',\n        // 开始时间\n        id: 24,\n        // 任务id\n        duration: 2,\n        // 任务时长，从start_date开始计算\n        parent: 2,\n        // 父任务ID\n        type: 4,\n        progress: 0,\n        status: \"popular\"\n      };\n      this.tasks.data.push(obj);\n\n      // 数据解析\n      gantt.parse(this.tasks);\n      // 刷新数据\n      gantt.refreshData();\n    }\n  },\n  mounted() {\n    this.initData();\n\n    //自适应甘特图的尺寸大小, 使得在不出现滚动条的情况下, 显示全部任务\n    gantt.config.autosize = true;\n    //只读模式\n    gantt.config.readonly = true;\n    //是否显示左侧树表格\n    gantt.config.show_grid = true;\n    //表格列设置\n    gantt.config.columns = [{\n      name: 'text',\n      label: '里程碑',\n      tree: true,\n      width: '280',\n      onrender: function (task, node) {\n        node.setAttribute(\"class\", \"gantt_cell gantt_last_cell gantt_cell_tree \" + task.status);\n      }\n    }, {\n      name: 'text',\n      label: '里程碑状态',\n      tree: true,\n      width: '280',\n      onrender: function (task, node) {\n        node.setAttribute(\"class\", \"gantt_cell gantt_last_cell gantt_cell_tree \" + task.status);\n      }\n    }];\n    var weekScaleTemplate = function (date) {\n      var dateToStr = gantt.date.date_to_str(\"%m %d\");\n      var endDate = gantt.date.add(gantt.date.add(date, 1, \"week\"), -1, \"day\");\n      var weekNum = gantt.date.date_to_str(\"第 %W 周\");\n      return weekNum(date);\n    };\n    var daysStyle = function (date) {\n      var dateToStr = gantt.date.date_to_str(\"%D\");\n      if (dateToStr(date) == \"六\" || dateToStr(date) == \"日\") return \"weekend\";\n      return \"\";\n    };\n    gantt.config.subscales = [{\n      unit: \"week\",\n      step: 1,\n      template: weekScaleTemplate\n    }, {\n      unit: \"day\",\n      step: 1,\n      format: \"%d\"\n    }];\n    gantt.plugins({\n      tooltip: true\n    });\n    gantt.attachEvent(\"onGanttReady\", function () {\n      var tooltips = gantt.ext.tooltips;\n      gantt.templates.tooltip_text = function (start, end, task) {\n        return task.toolTipsTxt + \"<br/>\" + \"阶段：\" + task.text + \"<br/>\" + gantt.templates.tooltip_date_format(start);\n      };\n    });\n\n    //设置任务条进度内容\n    gantt.templates.progress_text = function (start, end, task) {\n      return \"<div style='text-align:left;color:#fff;padding-left:20px'>\" + Math.round(task.progress * 100) + \"% </div>\";\n    };\n\n    //任务条显示内容\n    gantt.templates.task_text = function (start, end, task) {\n      // return task.text + '(' + task.duration + '天)';\n      return \"<div style='text-align:center;color:#fff'>\" + task.text + '(' + task.duration + '天)' + \"</div>\";\n    };\n\n    // gantt.templates.scale_cell_class = function(date) {\n    //     /*if(date.getDay()== 0 || date.getDay()== 6){\n    //       return \"weekend\";\n    //     }*/\n    //     return 'weekend'\n    // }\n\n    //任务栏周末亮色\n    /*gantt.templates.task_cell_class = function(item,date){\r\n      if(date.getDay()== 0 || date.getDay()== 6){\r\n        return \"weekend\";\r\n      }\r\n    };*/\n\n    //任务条上的文字大小 以及取消border自带样式\n    gantt.templates.task_class = function (start, end, item) {\n      return item.$level == 0 ? 'firstLevelTask' : 'secondLevelTask';\n    };\n    gantt.config.layout = {\n      css: \"gantt_container\",\n      cols: [{\n        width: 280,\n        min_width: 280,\n        rows: [{\n          view: \"grid\",\n          scrollX: \"gridScroll\",\n          scrollable: true,\n          scrollY: \"scrollVer\"\n        }, {\n          view: \"scrollbar\",\n          id: \"gridScroll\",\n          group: \"horizontal\"\n        }]\n      }, {\n        resizer: true,\n        width: 1\n      }, {\n        rows: [{\n          view: \"timeline\",\n          scrollX: \"scrollHor\",\n          scrollY: \"scrollVer\"\n        }, {\n          view: \"scrollbar\",\n          id: \"scrollHor\",\n          group: \"horizontal\"\n        }]\n      }, {\n        view: \"scrollbar\",\n        id: \"scrollVer\"\n      }]\n    };\n\n    //时间轴图表中，任务条形图的高度\n    // gantt.config.task_height = 28\n    //时间轴图表中，甘特图的高度\n    // gantt.config.row_height = 36\n    //时间轴图表中，如果不设置，只有行边框，区分上下的任务，设置之后带有列的边框，整个时间轴变成格子状。\n    gantt.config.show_task_cells = true;\n    //当task的长度改变时，自动调整图表坐标轴区间用于适配task的长度\n    gantt.config.fit_tasks = true;\n    gantt.config.min_column_width = 50;\n    gantt.config.auto_types = true;\n    gantt.config.xml_date = \"%Y-%m-%d\";\n    gantt.config.scale_unit = \"month\";\n    gantt.config.step = 1;\n    gantt.config.date_scale = \"%Y年%M\";\n    gantt.config.start_on_monday = true;\n    gantt.config.scale_height = 90;\n    gantt.config.autoscroll = true;\n    gantt.config.calendar_property = \"start_date\";\n    gantt.config.calendar_property = \"end_date\";\n    gantt.config.readonly = true;\n    gantt.i18n.setLocale('cn');\n\n    // 初始化\n    gantt.init(this.$refs.gantt);\n    // 数据解析\n    gantt.parse(this.tasks);\n  }\n};","map":{"version":3,"names":["gantt","name","data","tasks","options","value","label","methods","DateDifference","strDateStart","strDateEnd","begintime_ms","Date","parse","replace","endtime_ms","date3","days","Math","floor","initData","id","text","start_date","duration","open","toolTipsTxt","progress","status","parent","type","state","map","current","ind","arry","newObj","Object","assign","selectChange","val","console","log","obj","push","refreshData","mounted","config","autosize","readonly","show_grid","columns","tree","width","onrender","task","node","setAttribute","weekScaleTemplate","date","dateToStr","date_to_str","endDate","add","weekNum","daysStyle","subscales","unit","step","template","format","plugins","tooltip","attachEvent","tooltips","ext","templates","tooltip_text","start","end","tooltip_date_format","progress_text","round","task_text","task_class","item","$level","layout","css","cols","min_width","rows","view","scrollX","scrollable","scrollY","group","resizer","show_task_cells","fit_tasks","min_column_width","auto_types","xml_date","scale_unit","date_scale","start_on_monday","scale_height","autoscroll","calendar_property","i18n","setLocale","init","$refs"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"legend\">\r\n      <div class=\"legendBox\">\r\n        <div class=\"legendSml legendColor1\"></div>\r\n        <div>计划时间</div>\r\n      </div>\r\n      <div class=\"legendBox\">\r\n        <div class=\"legendSml legendColor2\"></div>\r\n        <div>相交时间</div>\r\n      </div>\r\n      <div class=\"legendBox\">\r\n        <div class=\"legendSml legendColor3\"></div>\r\n        <div>实际时间</div>\r\n      </div>\r\n    </div>\r\n    <div ref=\"gantt\" class=\"left-container\" />\r\n  </div>\r\n</template>\r\n<script>\r\n    import {\r\n        gantt\r\n    } from 'dhtmlx-gantt';\r\n    import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\"\r\n\r\n    export default {\r\n        name: 'gantt',\r\n        data() {\r\n            return {\r\n                tasks: {\r\n                    data: []\r\n                },\r\n                options: [{\r\n                    value: '1',\r\n                    label: '全部'\r\n                }, {\r\n                    value: '2',\r\n                    label: '完成'\r\n                }, {\r\n                    value: '3',\r\n                    label: '正常'\r\n                }, {\r\n                    value: '4',\r\n                    label: '异常'\r\n                }, {\r\n                    value: '5',\r\n                    label: '未启动'\r\n                }],\r\n                value: '1'\r\n            }\r\n        },\r\n        methods: {\r\n            //开始时间-结束时间参数\r\n            DateDifference: function(strDateStart, strDateEnd) {\r\n                var begintime_ms = Date.parse(new Date(strDateStart.replace(/-/g, '/'))) //begintime 为开始时间\r\n                var endtime_ms = Date.parse(new Date(strDateEnd.replace(/-/g, '/'))) // endtime 为结束时间\r\n                var date3 = endtime_ms - begintime_ms //时间差的毫秒数\r\n                var days = Math.floor(date3 / (24 * 3600 * 1000))\r\n                return days\r\n            },\r\n            initData: function() {\r\n                this.tasks.data = [{\r\n                        id: 1,\r\n                        text: '概念设计',\r\n                        start_date: '2020-04-08',\r\n                        duration: 10,\r\n                        open: true, //默认打开，\r\n                        toolTipsTxt: 'xxx项目概念设计',\r\n                        progress: 0.6,\r\n                        status: \"parent\"\r\n                    },\r\n                    {\r\n                        toolTipsTxt: 'xxx项目-项目启动会',\r\n                        text: '项目启动会-外部', // 任务名\r\n                        start_date: '2020-04-08', // 开始时间\r\n                        id: 11, // 任务id\r\n                        duration: 3, // 任务时长，从start_date开始计算\r\n                        parent: 1, // 父任务ID\r\n                        type: 1,\r\n                        progress: 0.5,\r\n                        status: \"yellow\"\r\n                    },\r\n                    {\r\n                        toolTipsTxt: 'xxx项目-项目启动会议',\r\n                        text: '项目启动会-内部',\r\n                        start_date: '2020-04-11',\r\n                        id: 12,\r\n                        duration: 2,\r\n                        parent: 1,\r\n                        type: 2,\r\n                        progress: 0.6,\r\n                        status: \"pink\"\r\n                    },\r\n                    {\r\n                        toolTipsTxt: 'xxx项目开工会',\r\n                        text: '项目开工会',\r\n                        start_date: '2020-04-13',\r\n                        id: 13,\r\n                        duration: 4,\r\n                        parent: 1,\r\n                        type: 3,\r\n                        progress: 1,\r\n                        status: \"green\"\r\n\r\n                    }, {\r\n                        toolTipsTxt: 'xxx项目-项目分析',\r\n                        text: '项目分析',\r\n                        start_date: '2020-04-13',\r\n                        id: 14,\r\n                        duration: 4,\r\n                        parent: 1,\r\n                        type: 4,\r\n                        progress: 0.6,\r\n                        status: \"popular\"\r\n                    },\r\n\r\n                    {\r\n                        id: 2,\r\n                        text: '方案设计',\r\n                        start_date: '2020-04-08',\r\n                        duration: 8,\r\n                        open: true,\r\n                        toolTipsTxt: 'xxx方案设计',\r\n                        state: 'default',\r\n                        // color:\"#409EFF\", //设置颜色\r\n                        progress: 0.6,\r\n                        status: \"parent\"\r\n                    },\r\n                    {\r\n                        toolTipsTxt: 'xxx新项目原型图设计',\r\n                        text: '原型图设计',\r\n                        start_date: '2020-04-08',\r\n                        id: 21,\r\n                        duration: 2,\r\n                        parent: 2,\r\n                        type: 1,\r\n                        progress: 0.6,\r\n                        status: \"yellow\"\r\n                    },\r\n                    {\r\n                        toolTipsTxt: 'xxx项目-项目设计图',\r\n                        text: '设计图设计',\r\n                        start_date: '2020-04-09',\r\n                        id: 22,\r\n                        duration: 2,\r\n                        parent: 2,\r\n                        type: 2,\r\n                        progress: 0.6,\r\n                        status: \"pink\"\r\n                    },\r\n                    {\r\n                        toolTipsTxt: 'xxx项目-项目确认',\r\n                        text: '项目确认',\r\n                        start_date: '2020-04-11',\r\n                        id: 23,\r\n                        duration: 2,\r\n                        parent: 2,\r\n                        type: 3,\r\n                        progress: 1,\r\n                        status: \"green\"\r\n                    }\r\n\r\n                ].map(function(current, ind, arry) {\r\n                    var newObj = {}\r\n                    if (current.type) { //存在type字段 说明非一级菜单，判断阶段的具体类型 设置不同颜色\r\n                        if (current.type == 1) { //冒烟\r\n                            newObj = Object.assign({}, current, {\r\n                                'color': '#fcca02'\r\n                            })\r\n                        } else if (current.type == 2) { //单元\r\n                            newObj = Object.assign({}, current, {\r\n                                'color': '#fec0dc'\r\n                            })\r\n                        } else if (current.type == 3) { //回归\r\n                            newObj = Object.assign({}, current, {\r\n                                'color': '#62ddd4'\r\n                            })\r\n                        } else if (current.type == 4) {\r\n                            newObj = Object.assign({}, current, {\r\n                                'color': '#d1a6ff'\r\n                            })\r\n                        }\r\n                    } else { //一级菜单是蓝色的\r\n                        newObj = Object.assign({}, current, {\r\n                            'color': '#5692f0'\r\n                        })\r\n                    }\r\n\r\n                    return newObj\r\n                })\r\n            },\r\n            selectChange(val){\r\n                console.log(val)\r\n\r\n                //测试用例\r\n                var obj = {\r\n                        toolTipsTxt: '新增任务',\r\n                        text: '新增任务', // 任务名\r\n                        start_date: '2020-04-15', // 开始时间\r\n                        id: 24, // 任务id\r\n                        duration: 2, // 任务时长，从start_date开始计算\r\n                        parent: 2, // 父任务ID\r\n                        type: 4,\r\n                        progress:0,\r\n                        status: \"popular\"\r\n                }\r\n                this.tasks.data.push(obj)\r\n\r\n                // 数据解析\r\n                gantt.parse(this.tasks)\r\n                // 刷新数据\r\n                gantt.refreshData();\r\n            }\r\n        },\r\n        mounted() {\r\n            this.initData()\r\n\r\n\r\n            //自适应甘特图的尺寸大小, 使得在不出现滚动条的情况下, 显示全部任务\r\n            gantt.config.autosize = true\r\n            //只读模式\r\n            gantt.config.readonly = true\r\n            //是否显示左侧树表格\r\n            gantt.config.show_grid = true\r\n            //表格列设置\r\n            gantt.config.columns = [\r\n                {\r\n                    name: 'text',\r\n                    label: '里程碑',\r\n                    tree: true,\r\n                    width: '280',\r\n                    onrender: function(task, node) {\r\n                        node.setAttribute(\"class\", \"gantt_cell gantt_last_cell gantt_cell_tree \" + task.status);\r\n                    }\r\n                },\r\n                {\r\n                    name: 'text',\r\n                    label: '里程碑状态',\r\n                    tree: true,\r\n                    width: '280',\r\n                    onrender: function(task, node) {\r\n                        node.setAttribute(\"class\", \"gantt_cell gantt_last_cell gantt_cell_tree \" + task.status);\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n\r\n            var weekScaleTemplate = function(date) {\r\n                var dateToStr = gantt.date.date_to_str(\"%m %d\");\r\n                var endDate = gantt.date.add(gantt.date.add(date, 1, \"week\"), -1, \"day\");\r\n                var weekNum = gantt.date.date_to_str(\"第 %W 周\");\r\n                return weekNum(date)\r\n            };\r\n            var daysStyle = function(date) {\r\n                var dateToStr = gantt.date.date_to_str(\"%D\");\r\n                if (dateToStr(date) == \"六\" || dateToStr(date) == \"日\") return \"weekend\";\r\n                return \"\";\r\n            };\r\n            gantt.config.subscales = [{\r\n                    unit: \"week\",\r\n                    step: 1,\r\n                    template: weekScaleTemplate\r\n                },\r\n                {\r\n                    unit: \"day\",\r\n                    step: 1,\r\n                    format: \"%d\"\r\n                }\r\n            ];\r\n\r\n            gantt.plugins({\r\n                tooltip: true\r\n            });\r\n            gantt.attachEvent(\"onGanttReady\", function() {\r\n                var tooltips = gantt.ext.tooltips;\r\n                gantt.templates.tooltip_text = function(start, end, task) {\r\n\r\n                    return task.toolTipsTxt + \"<br/>\" +\r\n                        \"阶段：\" + task.text + \"<br/>\" +\r\n                        gantt.templates.tooltip_date_format(start)\r\n                };\r\n\r\n\r\n            });\r\n\r\n\r\n            //设置任务条进度内容\r\n            gantt.templates.progress_text = function(start, end, task) {\r\n                return \"<div style='text-align:left;color:#fff;padding-left:20px'>\" + Math.round(task.progress * 100) +\r\n                    \"% </div>\";\r\n            };\r\n\r\n            //任务条显示内容\r\n            gantt.templates.task_text = function(start, end, task) {\r\n                // return task.text + '(' + task.duration + '天)';\r\n                return \"<div style='text-align:center;color:#fff'>\" + task.text + '(' + task.duration + '天)' +\r\n                    \"</div>\";\r\n            }\r\n\r\n\r\n            // gantt.templates.scale_cell_class = function(date) {\r\n            //     /*if(date.getDay()== 0 || date.getDay()== 6){\r\n            //       return \"weekend\";\r\n            //     }*/\r\n            //     return 'weekend'\r\n            // }\r\n\r\n\r\n            //任务栏周末亮色\r\n            /*gantt.templates.task_cell_class = function(item,date){\r\n              if(date.getDay()== 0 || date.getDay()== 6){\r\n                return \"weekend\";\r\n              }\r\n            };*/\r\n\r\n\r\n            //任务条上的文字大小 以及取消border自带样式\r\n            gantt.templates.task_class = function(start, end, item) {\r\n                return item.$level == 0 ? 'firstLevelTask' : 'secondLevelTask'\r\n            }\r\n\r\n            gantt.config.layout = {\r\n                css: \"gantt_container\",\r\n                cols: [{\r\n                        width: 280,\r\n                        min_width: 280,\r\n                        rows: [{\r\n                                view: \"grid\",\r\n                                scrollX: \"gridScroll\",\r\n                                scrollable: true,\r\n                                scrollY: \"scrollVer\"\r\n                            },\r\n                            {\r\n                                view: \"scrollbar\",\r\n                                id: \"gridScroll\",\r\n                                group: \"horizontal\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        resizer: true,\r\n                        width: 1\r\n                    },\r\n                    {\r\n                        rows: [{\r\n                                view: \"timeline\",\r\n                                scrollX: \"scrollHor\",\r\n                                scrollY: \"scrollVer\"\r\n                            },\r\n                            {\r\n                                view: \"scrollbar\",\r\n                                id: \"scrollHor\",\r\n                                group: \"horizontal\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        view: \"scrollbar\",\r\n                        id: \"scrollVer\"\r\n                    }\r\n                ]\r\n            };\r\n\r\n            //时间轴图表中，任务条形图的高度\r\n            // gantt.config.task_height = 28\r\n            //时间轴图表中，甘特图的高度\r\n            // gantt.config.row_height = 36\r\n            //时间轴图表中，如果不设置，只有行边框，区分上下的任务，设置之后带有列的边框，整个时间轴变成格子状。\r\n            gantt.config.show_task_cells = true\r\n            //当task的长度改变时，自动调整图表坐标轴区间用于适配task的长度\r\n            gantt.config.fit_tasks = true\r\n            gantt.config.min_column_width = 50;\r\n            gantt.config.auto_types = true;\r\n            gantt.config.xml_date = \"%Y-%m-%d\";\r\n            gantt.config.scale_unit = \"month\";\r\n            gantt.config.step = 1;\r\n            gantt.config.date_scale = \"%Y年%M\";\r\n            gantt.config.start_on_monday = true;\r\n            gantt.config.scale_height = 90;\r\n            gantt.config.autoscroll = true;\r\n            gantt.config.calendar_property = \"start_date\";\r\n            gantt.config.calendar_property = \"end_date\";\r\n            gantt.config.readonly = true;\r\n            gantt.i18n.setLocale('cn');\r\n\r\n            // 初始化\r\n            gantt.init(this.$refs.gantt)\r\n            // 数据解析\r\n            gantt.parse(this.tasks)\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"scss\">\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  overflow: hidden;\r\n}\r\n\r\n.legend {\r\n  padding: 10px;\r\n  display: flex;\r\n\r\n  .legendBox {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 20px;\r\n\r\n    .legendSml {\r\n      width: 30px;\r\n      height: 16px;\r\n      border-radius: 5px;\r\n      margin-right: 4px;\r\n    }\r\n\r\n    .legendColor1 {\r\n      background: #01aff4;\r\n    }\r\n    .legendColor2 {\r\n      background: #0169bd;\r\n    }\r\n    .legendColor3 {\r\n      background: rgb(1, 105 , 189, 50%);\r\n    }\r\n  }\r\n}\r\n\r\n.gantt_task_content {\r\n  display: flex;\r\n}\r\n\r\n.gantt_task_line {\r\n  background: #fff;\r\n}\r\n\r\n.custom_progress {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  text-align: center;\r\n  height: 100%;\r\n}\r\n.nearly_done {\r\n  background-color: #01aff4 !important;\r\n}\r\n\r\n.in_progress {\r\n  background-color: #0169bd !important;\r\n}\r\n\r\n.in_progress_w {\r\n  background-color: #FFF !important;\r\n}\r\n\r\n.idle {\r\n  background-color: rgb(1, 105 , 189, 50%) !important;\r\n}\r\n.firstLevelTask {\r\n  border: none;\r\n}\r\n\r\n.secondLevelTask {\r\n  border: none;\r\n}\r\n\r\n.left-container {\r\n  height: 600px;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}