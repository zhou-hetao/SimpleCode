{"ast":null,"code":"import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\nexport default {\n  name: \"GanttComponent\",\n  data() {\n    return {\n      tasks: {\n        data: [{\n          id: 1,\n          title: \"一号里程碑\",\n          text: \"一号里程碑\",\n          start_date: \"2023-06-24 00:00\",\n          end_date: \"2023-07-28\",\n          prottiem: \"2023-06-24 00:00\",\n          propedtime: \"2023-09-28\",\n          open: true,\n          status: \"进行中\"\n        }, {\n          id: 2,\n          title: \"一号z里程碑\",\n          text: \"一号z里程碑\",\n          start_date: \"2023-06-24 00:00\",\n          end_date: \"2023-08-28\",\n          prottiem: \"2023-06-24 00:00\",\n          propedtime: \"2023-09-28\",\n          open: true,\n          parent: 1,\n          status: \"进行中\"\n        }]\n      }\n    };\n  },\n  mounted() {\n    gantt.i18n.setLocale(\"cn\");\n    gantt.config.columns = [\n    // 原始列\n    {\n      name: \"title\",\n      label: \"里程碑\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"start_date\",\n      label: \"开始日期\",\n      align: \"center\",\n      width: 100\n    }, {\n      name: \"status\",\n      label: \"里程碑状态\",\n      width: 100\n    }];\n    console.log(gantt.templates);\n    gantt.templates.task_text = function (start, end, task) {\n      console.log(start, end, task);\n      this.renderLabel(task.start_date, 1) + renderLabel(task.prottiem, 2, task.state);\n    };\n    gantt.plugins({\n      marker: true,\n      tooltip: true\n    }); // 开启marker插件 \n    gantt.templates.tooltip_text = function (start, end, task) {\n      console.log('task', task);\n      return \"<b>任务内容:</b>\" + task.text + \"<br/><b>计划开始:</b> \" + task.start_date + \"<br/><b>计划结束:</b> \" + task.end_date + \"<br/><b>实际开始:</b> \" + task.prottiem + \"<br/><b>实际结束:</b> \" + task.propedtime;\n    };\n    // gantt.templates.grid_cell_status = function (item, column) {\n    //   // 获取需要渲染的数据\n    //   var value = item.status || \"\";\n\n    //   // 根据值来渲染模板\n    //   return \"<div class='gantt_tree_content'>\" + value + \"</div>\";\n    // };\n    gantt.config.drag_move = false; // 禁止用户移动任务\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.scale_unit = \"year\"; // 刻度单位为年\n    gantt.config.date_scale = \"%Y\"; // 日期格式为年份\n    gantt.config.scale_height = 50; // 刻度高度\n    gantt.config.subscales = [{\n      unit: \"month\",\n      step: 1,\n      date: \"%m-%Y\"\n    }]; // 次刻度为月份和年份\n    gantt.templates.task_date = function (start, end, task) {\n      return gantt.date.date_to_str(\"%Y-%m\")(start);\n    };\n    gantt.init(this.$refs.gantt);\n    gantt.parse(this.tasks);\n  },\n  methods: {\n    renderLabel(progress, type, state) {\n      var cssClass = \"custom_progress \";\n      if (type === 1) {\n        cssClass += \"nearly_done\";\n      } else if (type === 2) {\n        if (state) {\n          cssClass += \"in_progress\";\n        } else {\n          cssClass += \"in_progress_w\";\n        }\n      } else {\n        cssClass += \"idle\";\n      }\n      return \"<div class='\" + cssClass + \"' style='width:\" + relWidth + \"%'>\" + percenToString(progress) + \"</div>\";\n    }\n  }\n};","map":{"version":3,"names":["gantt","name","data","tasks","id","title","text","start_date","end_date","prottiem","propedtime","open","status","parent","mounted","i18n","setLocale","config","columns","label","width","tree","align","console","log","templates","task_text","start","end","task","renderLabel","state","plugins","marker","tooltip","tooltip_text","drag_move","xml_date","scale_unit","date_scale","scale_height","subscales","unit","step","date","task_date","date_to_str","init","$refs","parse","methods","progress","type","cssClass","relWidth","percenToString"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"gantt\" style=\"width: 100%; height: 500px\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\r\nexport default {\r\n  name: \"GanttComponent\",\r\n  data() {\r\n    return {\r\n      tasks: {\r\n        data: [\r\n          {\r\n            id: 1,\r\n            title: \"一号里程碑\",\r\n            text: \"一号里程碑\",\r\n            start_date: \"2023-06-24 00:00\",\r\n            end_date: \"2023-07-28\",\r\n            prottiem: \"2023-06-24 00:00\",\r\n            propedtime: \"2023-09-28\",\r\n            open: true,\r\n            status: \"进行中\",\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"一号z里程碑\",\r\n            text: \"一号z里程碑\",\r\n            start_date: \"2023-06-24 00:00\",\r\n            end_date: \"2023-08-28\",\r\n            prottiem: \"2023-06-24 00:00\",\r\n            propedtime: \"2023-09-28\",\r\n            open: true,\r\n            parent: 1,\r\n            status: \"进行中\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    gantt.i18n.setLocale(\"cn\");\r\n    gantt.config.columns = [\r\n      // 原始列\r\n      { name: \"title\", label: \"里程碑\", width: \"*\", tree: true },\r\n      { name: \"start_date\", label: \"开始日期\", align: \"center\", width: 100 },\r\n      { name: \"status\", label: \"里程碑状态\", width: 100 },\r\n    ];\r\n    console.log(gantt.templates);\r\n    gantt.templates.task_text = function(start, end, task) {\r\n      console.log(start, end, task);\r\n      this.renderLabel(task.start_date, 1) + \r\n      renderLabel(task.prottiem, 2, task.state)\r\n    }\r\n\r\n    gantt.plugins({ marker: true, tooltip: true }); // 开启marker插件 \r\n    gantt.templates.tooltip_text = function(start, end, task){\r\n      console.log('task',task);\r\n      return \"<b>任务内容:</b>\" + task.text +\r\n      \"<br/><b>计划开始:</b> \" + task.start_date +\r\n      \"<br/><b>计划结束:</b> \" + task.end_date +\r\n      \"<br/><b>实际开始:</b> \" + task.prottiem +\r\n      \"<br/><b>实际结束:</b> \" + task.propedtime\r\n    };\r\n    // gantt.templates.grid_cell_status = function (item, column) {\r\n    //   // 获取需要渲染的数据\r\n    //   var value = item.status || \"\";\r\n\r\n    //   // 根据值来渲染模板\r\n    //   return \"<div class='gantt_tree_content'>\" + value + \"</div>\";\r\n    // };\r\n    gantt.config.drag_move = false; // 禁止用户移动任务\r\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n    gantt.config.scale_unit = \"year\"; // 刻度单位为年\r\n    gantt.config.date_scale = \"%Y\"; // 日期格式为年份\r\n    gantt.config.scale_height = 50; // 刻度高度\r\n    gantt.config.subscales = [{ unit: \"month\", step: 1, date: \"%m-%Y\" }]; // 次刻度为月份和年份\r\n    gantt.templates.task_date = function (start, end, task) {\r\n      return gantt.date.date_to_str(\"%Y-%m\")(start);\r\n    };\r\n    gantt.init(this.$refs.gantt);\r\n    gantt.parse(this.tasks);\r\n  },\r\n  methods:{\r\n     renderLabel(progress, type, state) {\r\n      var cssClass = \"custom_progress \";\r\n      if (type === 1) {\r\n        cssClass += \"nearly_done\";\r\n      } else if (type === 2) {\r\n        if (state) {\r\n          cssClass += \"in_progress\";\r\n        } else {\r\n          cssClass += \"in_progress_w\";\r\n        }\r\n      } else {\r\n        cssClass += \"idle\";\r\n      }\r\n      return (\r\n        \"<div class='\" +\r\n        cssClass +\r\n        \"' style='width:\" +\r\n        relWidth +\r\n        \"%'>\" +\r\n        percenToString(progress) +\r\n        \"</div>\"\r\n      );\r\n    }\r\n  }\r\n  \r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.gantt-container-right {\r\n  width: 60%;\r\n  height: 100%;\r\n  float: left;\r\n  overflow-y: auto;\r\n}\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  overflow: hidden;\r\n}\r\n\r\n.legend {\r\n  padding: 10px;\r\n  display: flex;\r\n\r\n  .legendBox {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 20px;\r\n\r\n    .legendSml {\r\n      width: 30px;\r\n      height: 16px;\r\n      border-radius: 5px;\r\n      margin-right: 4px;\r\n    }\r\n\r\n    .legendColor1 {\r\n      background: #01aff4;\r\n    }\r\n    .legendColor2 {\r\n      background: #0169bd;\r\n    }\r\n    .legendColor3 {\r\n      background: rgb(1, 105 , 189, 50%);\r\n    }\r\n  }\r\n}\r\n\r\n.gantt_task_content {\r\n  display: flex;\r\n}\r\n\r\n.gantt_task_line {\r\n  background: #fff;\r\n}\r\n\r\n.custom_progress {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  text-align: center;\r\n  height: 100%;\r\n}\r\n.nearly_done {\r\n  background-color: #01aff4 !important;\r\n}\r\n\r\n.in_progress {\r\n  background-color: #0169bd !important;\r\n}\r\n\r\n.in_progress_w {\r\n  background-color: #FFF !important;\r\n}\r\n\r\n.idle {\r\n  background-color: rgb(1, 105 , 189, 50%) !important;\r\n}\r\n.firstLevelTask {\r\n  border: none;\r\n}\r\n\r\n.secondLevelTask {\r\n  border: none;\r\n}\r\n\r\n.left-container {\r\n  height: 600px;\r\n}\r\n</style>"],"mappings":"AAMA;AACA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAD,IAAA,GACA;UACAE,EAAA;UACAC,KAAA;UACAC,IAAA;UACAC,UAAA;UACAC,QAAA;UACAC,QAAA;UACAC,UAAA;UACAC,IAAA;UACAC,MAAA;QACA,GACA;UACAR,EAAA;UACAC,KAAA;UACAC,IAAA;UACAC,UAAA;UACAC,QAAA;UACAC,QAAA;UACAC,UAAA;UACAC,IAAA;UACAE,MAAA;UACAD,MAAA;QACA;MAEA;IACA;EACA;EACAE,QAAA;IACAd,KAAA,CAAAe,IAAA,CAAAC,SAAA;IACAhB,KAAA,CAAAiB,MAAA,CAAAC,OAAA;IACA;IACA;MAAAjB,IAAA;MAAAkB,KAAA;MAAAC,KAAA;MAAAC,IAAA;IAAA,GACA;MAAApB,IAAA;MAAAkB,KAAA;MAAAG,KAAA;MAAAF,KAAA;IAAA,GACA;MAAAnB,IAAA;MAAAkB,KAAA;MAAAC,KAAA;IAAA,EACA;IACAG,OAAA,CAAAC,GAAA,CAAAxB,KAAA,CAAAyB,SAAA;IACAzB,KAAA,CAAAyB,SAAA,CAAAC,SAAA,aAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACAN,OAAA,CAAAC,GAAA,CAAAG,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,KAAAC,WAAA,CAAAD,IAAA,CAAAtB,UAAA,OACAuB,WAAA,CAAAD,IAAA,CAAApB,QAAA,KAAAoB,IAAA,CAAAE,KAAA;IACA;IAEA/B,KAAA,CAAAgC,OAAA;MAAAC,MAAA;MAAAC,OAAA;IAAA;IACAlC,KAAA,CAAAyB,SAAA,CAAAU,YAAA,aAAAR,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACAN,OAAA,CAAAC,GAAA,SAAAK,IAAA;MACA,wBAAAA,IAAA,CAAAvB,IAAA,GACA,uBAAAuB,IAAA,CAAAtB,UAAA,GACA,uBAAAsB,IAAA,CAAArB,QAAA,GACA,uBAAAqB,IAAA,CAAApB,QAAA,GACA,uBAAAoB,IAAA,CAAAnB,UAAA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACAV,KAAA,CAAAiB,MAAA,CAAAmB,SAAA;IACApC,KAAA,CAAAiB,MAAA,CAAAoB,QAAA;IACArC,KAAA,CAAAiB,MAAA,CAAAqB,UAAA;IACAtC,KAAA,CAAAiB,MAAA,CAAAsB,UAAA;IACAvC,KAAA,CAAAiB,MAAA,CAAAuB,YAAA;IACAxC,KAAA,CAAAiB,MAAA,CAAAwB,SAAA;MAAAC,IAAA;MAAAC,IAAA;MAAAC,IAAA;IAAA;IACA5C,KAAA,CAAAyB,SAAA,CAAAoB,SAAA,aAAAlB,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,OAAA7B,KAAA,CAAA4C,IAAA,CAAAE,WAAA,UAAAnB,KAAA;IACA;IACA3B,KAAA,CAAA+C,IAAA,MAAAC,KAAA,CAAAhD,KAAA;IACAA,KAAA,CAAAiD,KAAA,MAAA9C,KAAA;EACA;EACA+C,OAAA;IACApB,YAAAqB,QAAA,EAAAC,IAAA,EAAArB,KAAA;MACA,IAAAsB,QAAA;MACA,IAAAD,IAAA;QACAC,QAAA;MACA,WAAAD,IAAA;QACA,IAAArB,KAAA;UACAsB,QAAA;QACA;UACAA,QAAA;QACA;MACA;QACAA,QAAA;MACA;MACA,OACA,iBACAA,QAAA,GACA,oBACAC,QAAA,GACA,QACAC,cAAA,CAAAJ,QAAA,IACA;IAEA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}