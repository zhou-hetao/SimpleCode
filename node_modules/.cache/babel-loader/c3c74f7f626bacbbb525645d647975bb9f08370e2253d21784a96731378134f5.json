{"ast":null,"code":"import \"dhtmlx-gantt\";\nimport \"dhtmlx-gantt/codebase/locale/locale_cn.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_tooltip.js\";\nexport default {\n  name: \"gantt\",\n  props: {\n    tasks: {\n      type: Object,\n      default() {\n        return {\n          data: [],\n          links: []\n        };\n      }\n    }\n  },\n  mounted: function () {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i:%s\"; //  设置日期格式\n    gantt.config.readonly = true;\n    gantt.config.duration_unit = \"day\"; // minute, day, month\n\n    // 日期列显示\n    // gantt.config.min_column_width = 60;\n    gantt.config.scale_height = 30 * 2;\n    gantt.config.scales = [{\n      unit: \"year\",\n      step: 1,\n      format: \"%Y\"\n    }, {\n      unit: \"month\",\n      step: 1,\n      format: \"%M\"\n    }];\n\n    // 表头配置显示列   //name:绑定数据的名称  align：对其方式  label显示在表头的名称\n    gantt.config.columns = [{\n      name: \"text\",\n      tree: true,\n      width: \"*\",\n      align: \"left\",\n      label: \"产品/能力名称\",\n      resize: true\n    }, {\n      name: \"start_date\",\n      align: \"center\",\n      width: 80,\n      resize: true\n    }, {\n      name: \"cap_plan_end\",\n      align: \"center\",\n      label: \"结束时间\",\n      width: 80,\n      resize: true,\n      template: function (task) {\n        return task.cap_plan_end ? task.cap_plan_end.substring(0, 10) : '';\n      }\n    }];\n\n    // task 文本\n    gantt.templates.task_text = function (start, end, task) {\n      if (task.cap_actl_start != undefined) return \"<b>能力:</b> \" + task.text + \" (\" + task.progress * 100 + \"%)\";else return \"<b>\" + task.text + \"</b> \";\n    };\n    // gantt.templates.leftside_text = function(start, end, task) {\n    //   return \"<b>Priority: </b>\" + task.priority;\n    // };\n    // gantt.templates.rightside_text = function(start, end, task) {\n    //   return \"<b>Holders: </b>\" + task.users;\n    // };\n\n    // task tooltips\n    gantt.templates.tooltip_text = function (start, end, task) {\n      if (task.cap_actl_start != undefined) {\n        return \"<b>能力名称:</b> \" + task.text + \"<br/><b>实际开始时间:</b> \" + (task.cap_actl_start.substring(0, 10) == \"0000-00-00\" ? \" - \" : task.cap_actl_start.substring(0, 10)) + \"<br/><b>实际结束时间:</b> \" + (task.cap_actl_end.substring(0, 10) == \"0000-00-00\" ? \" - \" : task.cap_actl_end.substring(0, 10)) + \"<br/><b>进度:</b> \" + task.progress * 100 + \"%\";\n      } else {\n        return \"<b>产品名称:</b> \" + task.text;\n      }\n    };\n\n    // task 选择事件\n    // gantt.attachEvent(\"onTaskSelected\", id => {\n    //   let task = gantt.getTask(id);\n    //   this.$emit(\"task-selected\", task);\n    // });\n\n    // // 加载之前设置时间范围\n    // gantt.attachEvent(\"onBeforeGanttRender\", function(){\n    //   var range = gantt.getSubtaskDates();\n    //   console.log(range);\n    //   var scaleUnit = gantt.getState().scale_unit;\n    //   if(range.start_date && range.end_date){\n    //     gantt.config.start_date = gantt.calculateEndDate(range.start_date, -4, scaleUnit);\n    //     gantt.config.end_date = gantt.calculateEndDate(range.end_date, 5, scaleUnit);\n    //   }\n    // });\n\n    this.addTodayLine();\n    gantt.config.fit_tasks = true;\n    gantt.config.tooltip_hide_timeout = 2000;\n    gantt.init(this.$refs.gantt);\n    gantt.parse(this.$props.tasks);\n  },\n  methods: {\n    reload() {\n      gantt.clearAll();\n      this.addTodayLine();\n      gantt.parse(this.$props.tasks);\n      gantt.render();\n    },\n    addTodayLine() {\n      // 时间线\n      var date_to_str = gantt.date.date_to_str(gantt.config.task_date);\n      var today = new Date();\n      gantt.addMarker({\n        start_date: today,\n        css: \"today\",\n        text: \"今天\",\n        title: \"今天: \" + date_to_str(today)\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","tasks","type","Object","default","data","links","mounted","gantt","config","date_format","readonly","duration_unit","scale_height","scales","unit","step","format","columns","tree","width","align","label","resize","template","task","cap_plan_end","substring","templates","task_text","start","end","cap_actl_start","undefined","text","progress","tooltip_text","cap_actl_end","addTodayLine","fit_tasks","tooltip_hide_timeout","init","$refs","parse","$props","methods","reload","clearAll","render","date_to_str","date","task_date","today","Date","addMarker","start_date","css","title"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div ref=\"gantt\"></div>\r\n</template>\r\n \r\n<script>\r\nimport \"dhtmlx-gantt\";\r\nimport \"dhtmlx-gantt/codebase/locale/locale_cn.js\";\r\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\r\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_tooltip.js\";\r\n \r\nexport default {\r\n  name: \"gantt\",\r\n  props: {\r\n    tasks: {\r\n      type: Object,\r\n      default() {\r\n        return { data: [], links: [] };\r\n      }\r\n    }\r\n  },\r\n \r\n  mounted: function() {\r\n    gantt.config.date_format = \"%Y-%m-%d %H:%i:%s\"; //  设置日期格式\r\n    gantt.config.readonly = true;\r\n    gantt.config.duration_unit = \"day\"; // minute, day, month\r\n \r\n    // 日期列显示\r\n    // gantt.config.min_column_width = 60;\r\n    gantt.config.scale_height = 30 * 2;\r\n    gantt.config.scales = [\r\n      { unit: \"year\", step: 1, format: \"%Y\" },\r\n      { unit: \"month\", step: 1, format: \"%M\" },\r\n    ];\r\n \r\n    // 表头配置显示列   //name:绑定数据的名称  align：对其方式  label显示在表头的名称\r\n    gantt.config.columns = [\r\n      {\r\n        name: \"text\",\r\n        tree: true,\r\n        width: \"*\",\r\n        align: \"left\",\r\n        label: \"产品/能力名称\",\r\n        resize: true\r\n      },\r\n      { name: \"start_date\", align: \"center\", width: 80, resize: true },\r\n      {\r\n        name: \"cap_plan_end\",\r\n        align: \"center\",\r\n        label: \"结束时间\",\r\n        width: 80,\r\n        resize: true,\r\n        template:function(task){return task.cap_plan_end?task.cap_plan_end.substring(0,10):'';}\r\n      }\r\n    ];\r\n \r\n    // task 文本\r\n    gantt.templates.task_text = function(start, end, task) {\r\n      if (task.cap_actl_start != undefined)\r\n        return (\"<b>能力:</b> \" + task.text + \" (\" + task.progress * 100 + \"%)\");\r\n      else\r\n        return (\"<b>\" + task.text + \"</b> \");\r\n    };\r\n    // gantt.templates.leftside_text = function(start, end, task) {\r\n    //   return \"<b>Priority: </b>\" + task.priority;\r\n    // };\r\n    // gantt.templates.rightside_text = function(start, end, task) {\r\n    //   return \"<b>Holders: </b>\" + task.users;\r\n    // };\r\n \r\n    // task tooltips\r\n    gantt.templates.tooltip_text = function(start, end, task) {\r\n      if (task.cap_actl_start != undefined){\r\n        return (\r\n          \"<b>能力名称:</b> \" + task.text + \r\n          \"<br/><b>实际开始时间:</b> \" + (task.cap_actl_start.substring(0,10)==\"0000-00-00\"?\" - \":task.cap_actl_start.substring(0,10)) + \r\n          \"<br/><b>实际结束时间:</b> \" + (task.cap_actl_end.substring(0,10)==\"0000-00-00\"?\" - \":task.cap_actl_end.substring(0,10)) + \r\n          \"<br/><b>进度:</b> \" + task.progress * 100 + \"%\"\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          \"<b>产品名称:</b> \" + task.text\r\n        );\r\n      }\r\n    };\r\n \r\n    // task 选择事件\r\n    // gantt.attachEvent(\"onTaskSelected\", id => {\r\n    //   let task = gantt.getTask(id);\r\n    //   this.$emit(\"task-selected\", task);\r\n    // });\r\n \r\n    // // 加载之前设置时间范围\r\n    // gantt.attachEvent(\"onBeforeGanttRender\", function(){\r\n    //   var range = gantt.getSubtaskDates();\r\n    //   console.log(range);\r\n    //   var scaleUnit = gantt.getState().scale_unit;\r\n    //   if(range.start_date && range.end_date){\r\n    //     gantt.config.start_date = gantt.calculateEndDate(range.start_date, -4, scaleUnit);\r\n    //     gantt.config.end_date = gantt.calculateEndDate(range.end_date, 5, scaleUnit);\r\n    //   }\r\n    // });\r\n \r\n    this.addTodayLine();\r\n    gantt.config.fit_tasks = true; \r\n    gantt.config.tooltip_hide_timeout = 2000;\r\n    gantt.init(this.$refs.gantt);\r\n    gantt.parse(this.$props.tasks);\r\n  },\r\n  methods: {\r\n    reload() {\r\n      gantt.clearAll();\r\n      this.addTodayLine();\r\n      gantt.parse(this.$props.tasks);\r\n      gantt.render();\r\n    },\r\n    addTodayLine() {\r\n      // 时间线\r\n      var date_to_str = gantt.date.date_to_str(gantt.config.task_date);\r\n      var today = new Date();\r\n      gantt.addMarker({\r\n        start_date: today,\r\n        css: \"today\",\r\n        text: \"今天\",\r\n        title: \"今天: \" + date_to_str(today)\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n \r\n<style>\r\n@import \"~dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}