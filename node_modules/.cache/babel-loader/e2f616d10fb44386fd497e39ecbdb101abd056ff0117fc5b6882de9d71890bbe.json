{"ast":null,"code":"import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\nexport default {\n  name: \"GanttComponent\",\n  data() {\n    return {\n      tasks: {\n        data: [{\n          id: 1,\n          title: \"一号里程碑\",\n          text: \"一号里程碑\",\n          start_date: \"2023-06-24 00:00\",\n          end_date: \"2023-07-28\",\n          prottiem: \"2023-06-24 00:00\",\n          propedtime: \"2023-09-28\",\n          open: true,\n          status: \"进行中\"\n        }, {\n          id: 2,\n          title: \"一号z里程碑\",\n          text: \"一号z里程碑\",\n          start_date: \"2023-06-24 00:00\",\n          end_date: \"2023-08-28\",\n          prottiem: \"2023-06-24 00:00\",\n          propedtime: \"2023-09-28\",\n          open: true,\n          parent: 1,\n          status: \"进行中\"\n        }]\n      }\n    };\n  },\n  mounted() {\n    gantt.init(this.$refs.ganttContainer);\n    gantt.templates.rightside_text = function (start, end, task) {\n      // 获取任务的计划开始时间、计划结束时间、实际开始时间和实际结束时间\n      const planStart = gantt.getTask(task.id).start_date;\n      const planEnd = gantt.getTask(task.id).end_date;\n      const actualStart = gantt.getTask(task.id).actual_start_date;\n      const actualEnd = gantt.getTask(task.id).actual_end_date;\n\n      // 计算进度百分比\n      const planProgress = percentProgress(planStart, planEnd, start, end);\n      const actualProgress = percentProgress(actualStart, actualEnd, start, end);\n\n      // 生成进度条的HTML\n      let html = '';\n      if (planProgress > 0) {\n        html += `\n        <div class=\"progress-bar\">\n          <div class=\"plan-progress\" style=\"width: ${planProgress}%\"></div>\n        </div>\n      `;\n      }\n      if (actualProgress > 0) {\n        html += `\n        <div class=\"progress-bar\">\n          <div class=\"actual-progress\" style=\"width: ${actualProgress}%\"></div>\n        </div>\n      `;\n      }\n      return html;\n    };\n  },\n  methods: {\n    percentProgress(start, end, taskStart, taskEnd) {\n      const taskDuration = taskEnd - taskStart;\n      const elapsed = taskStart - start;\n      const remaining = end - taskEnd;\n\n      // 如果进度超出任务时间范围，则将进度限制在任务时间范围内\n      const progress = Math.max(0, Math.min(100, elapsed / taskDuration * 100));\n      return progress;\n    }\n  },\n  methods: {}\n};","map":{"version":3,"names":["gantt","name","data","tasks","id","title","text","start_date","end_date","prottiem","propedtime","open","status","parent","mounted","init","$refs","ganttContainer","templates","rightside_text","start","end","task","planStart","getTask","planEnd","actualStart","actual_start_date","actualEnd","actual_end_date","planProgress","percentProgress","actualProgress","html","methods","taskStart","taskEnd","taskDuration","elapsed","remaining","progress","Math","max","min"],"sources":["src/components/Gantt/Gantetu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"gantt-container\">\r\n    <div class=\"gantt-sidebar\"></div>\r\n    <div class=\"gantt-chart\" ref=\"ganttContainer\"></div>\r\n  </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nimport gantt from \"dhtmlx-gantt/codebase/dhtmlxgantt.js\";\r\nexport default {\r\n  name: \"GanttComponent\",\r\n  data() {\r\n    return {\r\n      tasks: {\r\n        data: [\r\n          {\r\n            id: 1,\r\n            title: \"一号里程碑\",\r\n            text: \"一号里程碑\",\r\n            start_date: \"2023-06-24 00:00\",\r\n            end_date: \"2023-07-28\",\r\n            prottiem: \"2023-06-24 00:00\",\r\n            propedtime: \"2023-09-28\",\r\n            open: true,\r\n            status: \"进行中\",\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"一号z里程碑\",\r\n            text: \"一号z里程碑\",\r\n            start_date: \"2023-06-24 00:00\",\r\n            end_date: \"2023-08-28\",\r\n            prottiem: \"2023-06-24 00:00\",\r\n            propedtime: \"2023-09-28\",\r\n            open: true,\r\n            parent: 1,\r\n            status: \"进行中\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n  gantt.init(this.$refs.ganttContainer);\r\n  \r\n  gantt.templates.rightside_text = function(start, end, task) {\r\n    // 获取任务的计划开始时间、计划结束时间、实际开始时间和实际结束时间\r\n    const planStart = gantt.getTask(task.id).start_date;\r\n    const planEnd = gantt.getTask(task.id).end_date;\r\n    const actualStart = gantt.getTask(task.id).actual_start_date;\r\n    const actualEnd = gantt.getTask(task.id).actual_end_date;\r\n    \r\n    // 计算进度百分比\r\n    const planProgress = percentProgress(planStart, planEnd, start, end);\r\n    const actualProgress = percentProgress(actualStart, actualEnd, start, end);\r\n    \r\n    // 生成进度条的HTML\r\n    let html = '';\r\n    \r\n    if (planProgress > 0) {\r\n      html += `\r\n        <div class=\"progress-bar\">\r\n          <div class=\"plan-progress\" style=\"width: ${planProgress}%\"></div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    if (actualProgress > 0) {\r\n      html += `\r\n        <div class=\"progress-bar\">\r\n          <div class=\"actual-progress\" style=\"width: ${actualProgress}%\"></div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    return html;\r\n  };\r\n},\r\n\r\nmethods: {\r\n  percentProgress(start, end, taskStart, taskEnd) {\r\n    const taskDuration = taskEnd - taskStart;\r\n    const elapsed = taskStart - start;\r\n    const remaining = end - taskEnd;\r\n    \r\n    // 如果进度超出任务时间范围，则将进度限制在任务时间范围内\r\n    const progress = Math.max(0, Math.min(100, (elapsed / taskDuration) * 100));\r\n    \r\n    return progress;\r\n  },\r\n},\r\n  methods: {},\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.gantt-container-right {\r\n  width: 60%;\r\n  height: 100%;\r\n  float: left;\r\n  overflow-y: auto;\r\n}\r\n.gantt-bar-label {\r\n  width: 100px;\r\n  height: 50px;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  padding: 2px;\r\n  background-color: #007bff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.long {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.short {\r\n  background-color: #28a745;\r\n}\r\n</style>"],"mappings":"AASA;AACA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAD,IAAA,GACA;UACAE,EAAA;UACAC,KAAA;UACAC,IAAA;UACAC,UAAA;UACAC,QAAA;UACAC,QAAA;UACAC,UAAA;UACAC,IAAA;UACAC,MAAA;QACA,GACA;UACAR,EAAA;UACAC,KAAA;UACAC,IAAA;UACAC,UAAA;UACAC,QAAA;UACAC,QAAA;UACAC,UAAA;UACAC,IAAA;UACAE,MAAA;UACAD,MAAA;QACA;MAEA;IACA;EACA;EACAE,QAAA;IACAd,KAAA,CAAAe,IAAA,MAAAC,KAAA,CAAAC,cAAA;IAEAjB,KAAA,CAAAkB,SAAA,CAAAC,cAAA,aAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA;MACA;MACA,MAAAC,SAAA,GAAAvB,KAAA,CAAAwB,OAAA,CAAAF,IAAA,CAAAlB,EAAA,EAAAG,UAAA;MACA,MAAAkB,OAAA,GAAAzB,KAAA,CAAAwB,OAAA,CAAAF,IAAA,CAAAlB,EAAA,EAAAI,QAAA;MACA,MAAAkB,WAAA,GAAA1B,KAAA,CAAAwB,OAAA,CAAAF,IAAA,CAAAlB,EAAA,EAAAuB,iBAAA;MACA,MAAAC,SAAA,GAAA5B,KAAA,CAAAwB,OAAA,CAAAF,IAAA,CAAAlB,EAAA,EAAAyB,eAAA;;MAEA;MACA,MAAAC,YAAA,GAAAC,eAAA,CAAAR,SAAA,EAAAE,OAAA,EAAAL,KAAA,EAAAC,GAAA;MACA,MAAAW,cAAA,GAAAD,eAAA,CAAAL,WAAA,EAAAE,SAAA,EAAAR,KAAA,EAAAC,GAAA;;MAEA;MACA,IAAAY,IAAA;MAEA,IAAAH,YAAA;QACAG,IAAA;AACA;AACA,qDAAAH,YAAA;AACA;AACA;MACA;MAEA,IAAAE,cAAA;QACAC,IAAA;AACA;AACA,uDAAAD,cAAA;AACA;AACA;MACA;MAEA,OAAAC,IAAA;IACA;EACA;EAEAC,OAAA;IACAH,gBAAAX,KAAA,EAAAC,GAAA,EAAAc,SAAA,EAAAC,OAAA;MACA,MAAAC,YAAA,GAAAD,OAAA,GAAAD,SAAA;MACA,MAAAG,OAAA,GAAAH,SAAA,GAAAf,KAAA;MACA,MAAAmB,SAAA,GAAAlB,GAAA,GAAAe,OAAA;;MAEA;MACA,MAAAI,QAAA,GAAAC,IAAA,CAAAC,GAAA,IAAAD,IAAA,CAAAE,GAAA,MAAAL,OAAA,GAAAD,YAAA;MAEA,OAAAG,QAAA;IACA;EACA;EACAN,OAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}